#!/usr/bin/env ruby
require 'optparse'
require_relative 'aws_service_analyzer'

Version = [0, 1]
options = { path: Dir.pwd }

OptionParser.new do |opts|
  opts.banner = "Usage: analyze [options]"

  # Optional argument; multi-line description.
  opts.on("-p", "--path [PATH]", "Specify path to JSON files") do |p|
    options[:path] = p
  end

  #opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    #options[:verbose] = v
  #end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

  # Another typical switch to print the version.
  opts.on_tail("--version", "Show version") do
    puts ::Version.join('.')
    exit
  end

end.parse!

a = ServiceAnalyzer.new
jsons = Dir["#{options[:path]}/*.api.json"]
if jsons.size == 0
  puts "Hmm there doesn't seem to be any *.api.json file in #{options[:path]}, you sure you got that right? (use --path to specify location of JSON files)"
  exit 1
end

services = jsons.map { |j| a.analyze(JSON.load(IO.read(j))) }
services.each { |s| puts s.to_s }
total_resources = services.map(&:resources).map(&:keys).flatten.size
total_operations = services.map(&:operations).map(&:keys).flatten.size
total_actions = services.map(&:resources).flatten.map { |r| r.values.map(&:resource_operations).flatten.size + r.values.map(&:collection_operations).flatten.size }.inject(0) {|t, n| n+t}
puts "Total: #{services.size} services, #{total_resources} resources with #{total_actions} actions and #{total_operations} unidentified operations"

