package aws

var Aws = map[string]main.Service{
	"EC2": main.Service{
		Metadata: (*main.Metadata)(0xc208004120),
		Version:  "",
		Operations: map[string]main.Operation{
			"AttachVolume": main.Operation{
				Name: "AttachVolume",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "AttachVolumeRequest"},
				Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "",
					Shape:         "VolumeAttachment"},
				Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)},
			"DescribeRegions": main.Operation{Name: "DescribeRegions",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "DescribeRegionsRequest"},
				Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "",
					Shape:         "DescribeRegionsResult"},
				Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)},
			"DescribeSnapshots": main.Operation{Name: "DescribeSnapshots",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "DescribeSnapshotsRequest"},
				Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "",
					Shape:         "DescribeSnapshotsResult"},
				Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)},
			"DescribeNetworkInterfaceAttribute": main.Operation{Name: "DescribeNetworkInterfaceAttribute",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "DescribeNetworkInterfaceAttributeRequest"},
				Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "",
					Shape:         "DescribeNetworkInterfaceAttributeResult"},
				Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)},
			"DescribeSubnets": main.Operation{Name: "DescribeSubnets",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "DescribeSubnetsRequest"},
				Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "",
					Shape:         "DescribeSubnetsResult"},
				Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)},
			"ModifyInstanceAttribute": main.Operation{Name: "ModifyInstanceAttribute",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "ModifyInstanceAttributeRequest"},
				Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "",
					Shape:         ""},
				Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)},
			"ModifySubnetAttribute": main.Operation{Name: "ModifySubnetAttribute",
				Http: struct {
					Method     string "json:\"method\""
					RequestUri string "json:\"requestUri\""
				}{
					Method:     "POST",
					RequestUri: "/"},
				Input: struct {
					Shape string "json:\"shape\""
				}{
					Shape: "ModifySubnetAttributeRequest"}, Output: struct {
					ResultWrapper string "json:\"resultWrapper\""
					Shape         string "json:\"shape\""
				}{
					ResultWrapper: "", Shape: ""}, Errors: []struct {
					Error struct {
						Code           string  "json:\"code\""
						HttpStatusCode float64 "json:\"httpStatusCode\""
						SenderFault    bool    "json:\"senderFault\""
					} "json:\"error\""
					Exception bool   "json:\"exception\""
					Shape     string "json:\"shape\""
				}(nil)}, "ReplaceRouteTableAssociation": main.Operation{Name: "ReplaceRouteTableAssociation", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ReplaceRouteTableAssociationRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ReplaceRouteTableAssociationResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DetachInternetGateway": main.Operation{Name: "DetachInternetGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DetachInternetGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DetachVolume": main.Operation{Name: "DetachVolume", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DetachVolumeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "VolumeAttachment"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AuthorizeSecurityGroupIngress": main.Operation{Name: "AuthorizeSecurityGroupIngress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AuthorizeSecurityGroupIngressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateInstanceExportTask": main.Operation{Name: "CreateInstanceExportTask", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateInstanceExportTaskRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateInstanceExportTaskResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateVpnConnectionRoute": main.Operation{Name: "CreateVpnConnectionRoute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateVpnConnectionRouteRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteSubnet": main.Operation{Name: "DeleteSubnet", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteSubnetRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeSpotPriceHistory": main.Operation{Name: "DescribeSpotPriceHistory", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeSpotPriceHistoryRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeSpotPriceHistoryResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AttachInternetGateway": main.Operation{Name: "AttachInternetGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AttachInternetGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteNetworkAclEntry": main.Operation{Name: "DeleteNetworkAclEntry", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteNetworkAclEntryRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ReplaceRoute": main.Operation{Name: "ReplaceRoute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ReplaceRouteRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ResetImageAttribute": main.Operation{Name: "ResetImageAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ResetImageAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ReplaceNetworkAclAssociation": main.Operation{Name: "ReplaceNetworkAclAssociation", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ReplaceNetworkAclAssociationRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ReplaceNetworkAclAssociationResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateInternetGateway": main.Operation{Name: "CreateInternetGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateInternetGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateInternetGatewayResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteInternetGateway": main.Operation{Name: "DeleteInternetGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteInternetGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeExportTasks": main.Operation{Name: "DescribeExportTasks", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeExportTasksRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeExportTasksResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeImages": main.Operation{Name: "DescribeImages", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeImagesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeImagesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ModifyVolumeAttribute": main.Operation{Name: "ModifyVolumeAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ModifyVolumeAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateCustomerGateway": main.Operation{Name: "CreateCustomerGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateCustomerGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateCustomerGatewayResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeInstanceAttribute": main.Operation{Name: "DescribeInstanceAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeInstanceAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "InstanceAttribute"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVolumes": main.Operation{Name: "DescribeVolumes", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVolumesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVolumesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteCustomerGateway": main.Operation{Name: "DeleteCustomerGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteCustomerGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ImportInstance": main.Operation{Name: "ImportInstance", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ImportInstanceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ImportInstanceResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreatePlacementGroup": main.Operation{Name: "CreatePlacementGroup", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreatePlacementGroupRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateTags": main.Operation{Name: "CreateTags", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateTagsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeAccountAttributes": main.Operation{Name: "DescribeAccountAttributes", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeAccountAttributesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeAccountAttributesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeCustomerGateways": main.Operation{Name: "DescribeCustomerGateways", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeCustomerGatewaysRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeCustomerGatewaysResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribePlacementGroups": main.Operation{Name: "DescribePlacementGroups", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribePlacementGroupsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribePlacementGroupsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ModifyVpcAttribute": main.Operation{Name: "ModifyVpcAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ModifyVpcAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AssignPrivateIpAddresses": main.Operation{Name: "AssignPrivateIpAddresses", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AssignPrivateIpAddressesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "BundleInstance": main.Operation{Name: "BundleInstance", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "BundleInstanceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "BundleInstanceResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateKeyPair": main.Operation{Name: "CreateKeyPair", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateKeyPairRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "KeyPair"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteVpnGateway": main.Operation{Name: "DeleteVpnGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteVpnGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ModifyImageAttribute": main.Operation{Name: "ModifyImageAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ModifyImageAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "StopInstances": main.Operation{Name: "StopInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "StopInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "StopInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AuthorizeSecurityGroupEgress": main.Operation{Name: "AuthorizeSecurityGroupEgress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AuthorizeSecurityGroupEgressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateVolume": main.Operation{Name: "CreateVolume", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateVolumeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "Volume"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ImportVolume": main.Operation{Name: "ImportVolume", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ImportVolumeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ImportVolumeResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RequestSpotInstances": main.Operation{Name: "RequestSpotInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RequestSpotInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "RequestSpotInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ResetInstanceAttribute": main.Operation{Name: "ResetInstanceAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ResetInstanceAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ReleaseAddress": main.Operation{Name: "ReleaseAddress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ReleaseAddressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RunInstances": main.Operation{Name: "RunInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RunInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "Reservation"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateNetworkAcl": main.Operation{Name: "CreateNetworkAcl", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateNetworkAclRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateNetworkAclResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateSubnet": main.Operation{Name: "CreateSubnet", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateSubnetRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateSubnetResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeInstanceStatus": main.Operation{Name: "DescribeInstanceStatus", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeInstanceStatusRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeInstanceStatusResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeRouteTables": main.Operation{Name: "DescribeRouteTables", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeRouteTablesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeRouteTablesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "PurchaseReservedInstancesOffering": main.Operation{Name: "PurchaseReservedInstancesOffering", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "PurchaseReservedInstancesOfferingRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "PurchaseReservedInstancesOfferingResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "EnableVgwRoutePropagation": main.Operation{Name: "EnableVgwRoutePropagation", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "EnableVgwRoutePropagationRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteVpcPeeringConnection": main.Operation{Name: "DeleteVpcPeeringConnection", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteVpcPeeringConnectionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DeleteVpcPeeringConnectionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeConversionTasks": main.Operation{Name: "DescribeConversionTasks", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeConversionTasksRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeConversionTasksResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeInternetGateways": main.Operation{Name: "DescribeInternetGateways", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeInternetGatewaysRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeInternetGatewaysResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AssociateRouteTable": main.Operation{Name: "AssociateRouteTable", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AssociateRouteTableRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "AssociateRouteTableResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ConfirmProductInstance": main.Operation{Name: "ConfirmProductInstance", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ConfirmProductInstanceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ConfirmProductInstanceResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateImage": main.Operation{Name: "CreateImage", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateImageRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateImageResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateNetworkInterface": main.Operation{Name: "CreateNetworkInterface", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateNetworkInterfaceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateNetworkInterfaceResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateVpcPeeringConnection": main.Operation{Name: "CreateVpcPeeringConnection", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateVpcPeeringConnectionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateVpcPeeringConnectionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeTags": main.Operation{Name: "DescribeTags", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeTagsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeTagsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ImportKeyPair": main.Operation{Name: "ImportKeyPair", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ImportKeyPairRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ImportKeyPairResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AttachNetworkInterface": main.Operation{Name: "AttachNetworkInterface", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AttachNetworkInterfaceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "AttachNetworkInterfaceResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteNetworkAcl": main.Operation{Name: "DeleteNetworkAcl", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteNetworkAclRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteVpnConnectionRoute": main.Operation{Name: "DeleteVpnConnectionRoute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteVpnConnectionRouteRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DetachNetworkInterface": main.Operation{Name: "DetachNetworkInterface", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DetachNetworkInterfaceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DisassociateAddress": main.Operation{Name: "DisassociateAddress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DisassociateAddressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "EnableVolumeIO": main.Operation{Name: "EnableVolumeIO", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "EnableVolumeIORequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateVpc": main.Operation{Name: "CreateVpc", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateVpcRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateVpcResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteRoute": main.Operation{Name: "DeleteRoute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteRouteRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeNetworkAcls": main.Operation{Name: "DescribeNetworkAcls", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeNetworkAclsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeNetworkAclsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeReservedInstances": main.Operation{Name: "DescribeReservedInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeReservedInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeReservedInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteVolume": main.Operation{Name: "DeleteVolume", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteVolumeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeReservedInstancesModifications": main.Operation{Name: "DescribeReservedInstancesModifications", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeReservedInstancesModificationsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeReservedInstancesModificationsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DisableVgwRoutePropagation": main.Operation{Name: "DisableVgwRoutePropagation", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DisableVgwRoutePropagationRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "GetPasswordData": main.Operation{Name: "GetPasswordData", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "GetPasswordDataRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "GetPasswordDataResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ModifyNetworkInterfaceAttribute": main.Operation{Name: "ModifyNetworkInterfaceAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ModifyNetworkInterfaceAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteSnapshot": main.Operation{Name: "DeleteSnapshot", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteSnapshotRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RevokeSecurityGroupEgress": main.Operation{Name: "RevokeSecurityGroupEgress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RevokeSecurityGroupEgressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "UnassignPrivateIpAddresses": main.Operation{Name: "UnassignPrivateIpAddresses", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "UnassignPrivateIpAddressesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeBundleTasks": main.Operation{Name: "DescribeBundleTasks", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeBundleTasksRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeBundleTasksResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeReservedInstancesOfferings": main.Operation{Name: "DescribeReservedInstancesOfferings", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeReservedInstancesOfferingsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeReservedInstancesOfferingsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "StartInstances": main.Operation{Name: "StartInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "StartInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "StartInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateVpnConnection": main.Operation{Name: "CreateVpnConnection", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateVpnConnectionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateVpnConnectionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteVpnConnection": main.Operation{Name: "DeleteVpnConnection", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteVpnConnectionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeregisterImage": main.Operation{Name: "DeregisterImage", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeregisterImageRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RejectVpcPeeringConnection": main.Operation{Name: "RejectVpcPeeringConnection", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RejectVpcPeeringConnectionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "RejectVpcPeeringConnectionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CancelBundleTask": main.Operation{Name: "CancelBundleTask", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CancelBundleTaskRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CancelBundleTaskResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeAvailabilityZones": main.Operation{Name: "DescribeAvailabilityZones", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeAvailabilityZonesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeAvailabilityZonesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ReportInstanceStatus": main.Operation{Name: "ReportInstanceStatus", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ReportInstanceStatusRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeSpotDatafeedSubscription": main.Operation{Name: "DescribeSpotDatafeedSubscription", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeSpotDatafeedSubscriptionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeSpotDatafeedSubscriptionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVpcAttribute": main.Operation{Name: "DescribeVpcAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVpcAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVpcAttributeResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DisassociateRouteTable": main.Operation{Name: "DisassociateRouteTable", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DisassociateRouteTableRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateReservedInstancesListing": main.Operation{Name: "CreateReservedInstancesListing", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateReservedInstancesListingRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateReservedInstancesListingResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateSnapshot": main.Operation{Name: "CreateSnapshot", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateSnapshotRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "Snapshot"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateVpnGateway": main.Operation{Name: "CreateVpnGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateVpnGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateVpnGatewayResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeAddresses": main.Operation{Name: "DescribeAddresses", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeAddressesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeAddressesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeImageAttribute": main.Operation{Name: "DescribeImageAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeImageAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ImageAttribute"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "MonitorInstances": main.Operation{Name: "MonitorInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "MonitorInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "MonitorInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RebootInstances": main.Operation{Name: "RebootInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RebootInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ResetSnapshotAttribute": main.Operation{Name: "ResetSnapshotAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ResetSnapshotAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateSpotDatafeedSubscription": main.Operation{Name: "CreateSpotDatafeedSubscription", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateSpotDatafeedSubscriptionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateSpotDatafeedSubscriptionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVolumeStatus": main.Operation{Name: "DescribeVolumeStatus", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVolumeStatusRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVolumeStatusResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVpcs": main.Operation{Name: "DescribeVpcs", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVpcsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVpcsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ReplaceNetworkAclEntry": main.Operation{Name: "ReplaceNetworkAclEntry", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ReplaceNetworkAclEntryRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeSnapshotAttribute": main.Operation{Name: "DescribeSnapshotAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeSnapshotAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeSnapshotAttributeResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVpcPeeringConnections": main.Operation{Name: "DescribeVpcPeeringConnections", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVpcPeeringConnectionsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVpcPeeringConnectionsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVpnGateways": main.Operation{Name: "DescribeVpnGateways", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVpnGatewaysRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVpnGatewaysResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AssociateDhcpOptions": main.Operation{Name: "AssociateDhcpOptions", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AssociateDhcpOptionsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeletePlacementGroup": main.Operation{Name: "DeletePlacementGroup", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeletePlacementGroupRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteRouteTable": main.Operation{Name: "DeleteRouteTable", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteRouteTableRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteTags": main.Operation{Name: "DeleteTags", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteTagsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeSecurityGroups": main.Operation{Name: "DescribeSecurityGroups", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeSecurityGroupsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeSecurityGroupsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DetachVpnGateway": main.Operation{Name: "DetachVpnGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DetachVpnGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ResetNetworkInterfaceAttribute": main.Operation{Name: "ResetNetworkInterfaceAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ResetNetworkInterfaceAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteKeyPair": main.Operation{Name: "DeleteKeyPair", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteKeyPairRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteVpc": main.Operation{Name: "DeleteVpc", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteVpcRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVpnConnections": main.Operation{Name: "DescribeVpnConnections", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVpnConnectionsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVpnConnectionsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ModifyReservedInstances": main.Operation{Name: "ModifyReservedInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ModifyReservedInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "ModifyReservedInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AllocateAddress": main.Operation{Name: "AllocateAddress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AllocateAddressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "AllocateAddressResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateRoute": main.Operation{Name: "CreateRoute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateRouteRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateRouteTable": main.Operation{Name: "CreateRouteTable", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateRouteTableRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateRouteTableResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteSecurityGroup": main.Operation{Name: "DeleteSecurityGroup", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteSecurityGroupRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "ModifySnapshotAttribute": main.Operation{Name: "ModifySnapshotAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "ModifySnapshotAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CancelReservedInstancesListing": main.Operation{Name: "CancelReservedInstancesListing", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CancelReservedInstancesListingRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CancelReservedInstancesListingResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateNetworkAclEntry": main.Operation{Name: "CreateNetworkAclEntry", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateNetworkAclEntryRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RegisterImage": main.Operation{Name: "RegisterImage", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RegisterImageRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "RegisterImageResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CancelConversionTask": main.Operation{Name: "CancelConversionTask", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CancelConversionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteDhcpOptions": main.Operation{Name: "DeleteDhcpOptions", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteDhcpOptionsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeDhcpOptions": main.Operation{Name: "DescribeDhcpOptions", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeDhcpOptionsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeDhcpOptionsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeKeyPairs": main.Operation{Name: "DescribeKeyPairs", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeKeyPairsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeKeyPairsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "UnmonitorInstances": main.Operation{Name: "UnmonitorInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "UnmonitorInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "UnmonitorInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "GetConsoleOutput": main.Operation{Name: "GetConsoleOutput", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "GetConsoleOutputRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "GetConsoleOutputResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "RevokeSecurityGroupIngress": main.Operation{Name: "RevokeSecurityGroupIngress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "RevokeSecurityGroupIngressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AttachVpnGateway": main.Operation{Name: "AttachVpnGateway", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AttachVpnGatewayRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "AttachVpnGatewayResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CancelExportTask": main.Operation{Name: "CancelExportTask", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CancelExportTaskRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CancelSpotInstanceRequests": main.Operation{Name: "CancelSpotInstanceRequests", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CancelSpotInstanceRequestsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CancelSpotInstanceRequestsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateDhcpOptions": main.Operation{Name: "CreateDhcpOptions", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateDhcpOptionsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateDhcpOptionsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeVolumeAttribute": main.Operation{Name: "DescribeVolumeAttribute", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeVolumeAttributeRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeVolumeAttributeResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AssociateAddress": main.Operation{Name: "AssociateAddress", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AssociateAddressRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "AssociateAddressResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CreateSecurityGroup": main.Operation{Name: "CreateSecurityGroup", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CreateSecurityGroupRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CreateSecurityGroupResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteNetworkInterface": main.Operation{Name: "DeleteNetworkInterface", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteNetworkInterfaceRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DeleteSpotDatafeedSubscription": main.Operation{Name: "DeleteSpotDatafeedSubscription", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DeleteSpotDatafeedSubscriptionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: ""}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeInstances": main.Operation{Name: "DescribeInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "AcceptVpcPeeringConnection": main.Operation{Name: "AcceptVpcPeeringConnection", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "AcceptVpcPeeringConnectionRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "AcceptVpcPeeringConnectionResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "TerminateInstances": main.Operation{Name: "TerminateInstances", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "TerminateInstancesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "TerminateInstancesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CopyImage": main.Operation{Name: "CopyImage", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CopyImageRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CopyImageResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "CopySnapshot": main.Operation{Name: "CopySnapshot", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "CopySnapshotRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "CopySnapshotResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeNetworkInterfaces": main.Operation{Name: "DescribeNetworkInterfaces", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeNetworkInterfacesRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeNetworkInterfacesResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeReservedInstancesListings": main.Operation{Name: "DescribeReservedInstancesListings", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeReservedInstancesListingsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeReservedInstancesListingsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}, "DescribeSpotInstanceRequests": main.Operation{Name: "DescribeSpotInstanceRequests", Http: struct {
				Method     string "json:\"method\""
				RequestUri string "json:\"requestUri\""
			}{
				Method: "POST", RequestUri: "/"}, Input: struct {
				Shape string "json:\"shape\""
			}{
				Shape: "DescribeSpotInstanceRequestsRequest"}, Output: struct {
				ResultWrapper string "json:\"resultWrapper\""
				Shape         string "json:\"shape\""
			}{
				ResultWrapper: "", Shape: "DescribeSpotInstanceRequestsResult"}, Errors: []struct {
				Error struct {
					Code           string  "json:\"code\""
					HttpStatusCode float64 "json:\"httpStatusCode\""
					SenderFault    bool    "json:\"senderFault\""
				} "json:\"error\""
				Exception bool   "json:\"exception\""
				Shape     string "json:\"shape\""
			}(nil)}},
		Shapes: map[string]main.Shape{
			"DescribeSnapshotsRequest": main.Shape{Type: "structure",
				Required: []string(nil),
				Members: map[string]struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					"Filters": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "FilterList",
						Location:     "",
						LocationName: "Filter"},
					"DryRun": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "Boolean",
						Location:     "",
						LocationName: "dryRun"},
					"SnapshotIds": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "SnapshotIdStringList",
						Location:     "",
						LocationName: "SnapshotId"},
					"OwnerIds": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "OwnerStringList",
						Location:     "",
						LocationName: "Owner"},
					"RestorableByUserIds": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "RestorableByStringList",
						Location:     "",
						LocationName: "RestorableBy"}},
				Pattern: "",
				Max:     0,
				Min:     0},
			"DiskImageVolumeDescription": main.Shape{Type: "structure",
				Required: []string{"Id"},
				Members: map[string]struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					"Size": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "Long",
						Location:     "",
						LocationName: "size"},
					"Id": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "String",
						Location:     "",
						LocationName: "id"}},
				Pattern: "",
				Max:     0,
				Min:     0},
			"NetworkInterfaceList": main.Shape{Type: "list",
				Required: []string(nil),
				Members: map[string]struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}(nil),
				Pattern: "",
				Max:     0,
				Min:     0},
			"SpotInstanceStatus": main.Shape{Type: "structure",
				Required: []string(nil),
				Members: map[string]struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					"UpdateTime": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "DateTime",
						Location:     "",
						LocationName: "updateTime"},
					"Message": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "String",
						Location:     "",
						LocationName: "message"},
					"Code": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape:        "String",
						Location:     "",
						LocationName: "code"}},
				Pattern: "",
				Max:     0,
				Min:     0},
			"VpnGateway": main.Shape{Type: "structure",
				Required: []string(nil), Members: map[string]struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					"Type": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape: "GatewayType", Location: "", LocationName: "type"}, "AvailabilityZone": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape: "String", Location: "", LocationName: "availabilityZone"}, "VpcAttachments": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape: "VpcAttachmentList", Location: "", LocationName: "attachments"}, "Tags": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape: "TagList", Location: "", LocationName: "tagSet"}, "VpnGatewayId": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape: "String", Location: "", LocationName: "vpnGatewayId"}, "State": struct {
						Shape        string "json:\"shape\""
						Location     string "json:\"location\""
						LocationName string "json:\"locationName\""
					}{
						Shape: "VpnState", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "ConversionTaskState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeExportTasksRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ExportTaskIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportTaskIdStringList", Location: "", LocationName: "exportTaskId"}}, Pattern: "", Max: 0, Min: 0}, "ImageAttribute": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"LaunchPermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "LaunchPermissionList", Location: "", LocationName: "launchPermission"}, "ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeList", Location: "", LocationName: "productCodes"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "kernel"}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "ramdisk"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "description"}, "SriovNetSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "sriovNetSupport"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingList", Location: "", LocationName: "blockDeviceMapping"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}}, Pattern: "", Max: 0, Min: 0}, "CopyImageRequest": main.Shape{Type: "structure", Required: []string{"SourceRegion", "SourceImageId", "Name"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SourceRegion": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "SourceImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DiskImageList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PriceSchedule": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Term": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "term"}, "Price": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Double", Location: "", LocationName: "price"}, "CurrencyCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CurrencyCodeValues", Location: "", LocationName: "currencyCode"}, "Active": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "active"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVpcAttributeRequest": main.Shape{Type: "structure", Required: []string{"VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcAttributeName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ImportInstanceVolumeDetailItem": main.Shape{Type: "structure", Required: []string{"BytesConverted", "AvailabilityZone", "Image", "Volume", "Status"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StatusMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "statusMessage"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "BytesConverted": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "bytesConverted"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Image": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageDescription", Location: "", LocationName: "image"}, "Volume": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageVolumeDescription", Location: "", LocationName: "volume"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "status"}}, Pattern: "", Max: 0, Min: 0}, "CreateVpnGatewayResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpnGateway": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnGateway", Location: "", LocationName: "vpnGateway"}}, Pattern: "", Max: 0, Min: 0}, "ImageTypeValues": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceExportDetails": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "TargetEnvironment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportEnvironment", Location: "", LocationName: "targetEnvironment"}}, Pattern: "", Max: 0, Min: 0}, "SubnetIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpnConnectionIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AccountAttribute": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AttributeName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attributeName"}, "AttributeValues": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AccountAttributeValueList", Location: "", LocationName: "attributeValueSet"}}, Pattern: "", Max: 0, Min: 0}, "CreateInstanceExportTaskRequest": main.Shape{Type: "structure", Required: []string{"InstanceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "TargetEnvironment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportEnvironment", Location: "", LocationName: "targetEnvironment"}, "ExportToS3Task": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportToS3TaskSpecification", Location: "", LocationName: "exportToS3"}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusEventsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RouteTable": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "Routes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RouteList", Location: "", LocationName: "routeSet"}, "Associations": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RouteTableAssociationList", Location: "", LocationName: "associationSet"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "PropagatingVgws": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PropagatingVgwList", Location: "", LocationName: "propagatingVgwSet"}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusDetails": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusName", Location: "", LocationName: "name"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "status"}}, Pattern: "", Max: 0, Min: 0}, "NetworkAclEntry": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Protocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "protocol"}, "RuleAction": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RuleAction", Location: "", LocationName: "ruleAction"}, "Egress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "egress"}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrBlock"}, "IcmpTypeCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IcmpTypeCode", Location: "", LocationName: "icmpTypeCode"}, "PortRange": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PortRange", Location: "", LocationName: "portRange"}, "RuleNumber": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "ruleNumber"}}, Pattern: "", Max: 0, Min: 0}, "VpnGatewayList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateVpnConnectionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpnConnection": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnConnection", Location: "", LocationName: "vpnConnection"}}, Pattern: "", Max: 0, Min: 0}, "InstanceCount": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ListingState", Location: "", LocationName: "state"}, "InstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "instanceCount"}}, Pattern: "", Max: 0, Min: 0}, "InstanceAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "UnmonitorInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceMonitorings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceMonitoringList", Location: "", LocationName: "instancesSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVpnGatewaysResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpnGateways": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnGatewayList", Location: "", LocationName: "vpnGatewaySet"}}, Pattern: "", Max: 0, Min: 0}, "ImportInstanceVolumeDetailSet": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PlacementGroupList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "BlockDeviceMappingList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CopySnapshotResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "snapshotId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSpotInstanceRequestsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SpotInstanceRequestIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceRequestIdList", Location: "", LocationName: "SpotInstanceRequestId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "AccountAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CancelSpotInstanceRequestsRequest": main.Shape{Type: "structure", Required: []string{"SpotInstanceRequestIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SpotInstanceRequestIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceRequestIdList", Location: "", LocationName: "SpotInstanceRequestId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVpnConnectionsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpnConnectionIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnConnectionIdStringList", Location: "", LocationName: "VpnConnectionId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "GroupIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceStateChangeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ListingState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "TagDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ResourceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ResourceType", Location: "", LocationName: "resourceType"}, "Key": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "key"}, "Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "value"}, "ResourceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "resourceId"}}, Pattern: "", Max: 0, Min: 0}, "VpnStaticRouteSource": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AttributeValue": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "value"}}, Pattern: "", Max: 0, Min: 0}, "CreateCustomerGatewayRequest": main.Shape{Type: "structure", Required: []string{"Type", "PublicIp", "BgpAsn"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GatewayType", Location: "", LocationName: ""}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "IpAddress"}, "BgpAsn": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteVpnConnectionRouteRequest": main.Shape{Type: "structure", Required: []string{"VpnConnectionId", "DestinationCidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpnConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "KeyNameStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "UserIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AssociateAddressResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}}, Pattern: "", Max: 0, Min: 0}, "DeletePlacementGroupRequest": main.Shape{Type: "structure", Required: []string{"GroupName"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}}, Pattern: "", Max: 0, Min: 0}, "InstanceStatusSummary": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SummaryStatus", Location: "", LocationName: "status"}, "Details": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStatusDetailsList", Location: "", LocationName: "details"}}, Pattern: "", Max: 0, Min: 0}, "PortRange": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"From": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "from"}, "To": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "to"}}, Pattern: "", Max: 0, Min: 0}, "PropagatingVgwList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SummaryStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpnConnectionOptions": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StaticRoutesOnly": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "staticRoutesOnly"}}, Pattern: "", Max: 0, Min: 0}, "DescribeCustomerGatewaysResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CustomerGateways": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CustomerGatewayList", Location: "", LocationName: "customerGatewaySet"}}, Pattern: "", Max: 0, Min: 0}, "IamInstanceProfileSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Arn": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "arn"}, "Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "name"}}, Pattern: "", Max: 0, Min: 0}, "BundleTask": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"BundleId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "bundleId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BundleTaskState", Location: "", LocationName: "state"}, "StartTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "startTime"}, "UpdateTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "updateTime"}, "Storage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Storage", Location: "", LocationName: "storage"}, "Progress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "progress"}, "BundleTaskError": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BundleTaskError", Location: "", LocationName: "error"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}}, Pattern: "", Max: 0, Min: 0}, "CreateImageRequest": main.Shape{Type: "structure", Required: []string{"InstanceId", "Name"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "name"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "NoReboot": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "noReboot"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingRequestList", Location: "", LocationName: "blockDeviceMapping"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}}, Pattern: "", Max: 0, Min: 0}, "InstanceBlockDeviceMappingSpecificationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeStatusList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Vpc": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DhcpOptionsId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "dhcpOptionsId"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "InstanceTenancy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Tenancy", Location: "", LocationName: "instanceTenancy"}, "IsDefault": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "isDefault"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcState", Location: "", LocationName: "state"}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrBlock"}}, Pattern: "", Max: 0, Min: 0}, "DatafeedSubscriptionState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeVpcsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcIdStringList", Location: "", LocationName: "VpcId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "TagDescriptionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeNetworkInterfaceAttributeResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "Attachment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceAttachment", Location: "", LocationName: "attachment"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "description"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "sourceDestCheck"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesModificationsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "ReservedInstancesModificationIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesModificationIdStringList", Location: "", LocationName: "ReservedInstancesModificationId"}}, Pattern: "", Max: 0, Min: 0}, "CancelBundleTaskResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"BundleTask": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BundleTask", Location: "", LocationName: "bundleInstanceTask"}}, Pattern: "", Max: 0, Min: 0}, "CancelSpotInstanceRequestState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DhcpConfigurationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReplaceNetworkAclEntryRequest": main.Shape{Type: "structure", Required: []string{"NetworkAclId", "RuleNumber", "Protocol", "RuleAction", "Egress", "CidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RuleAction": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RuleAction", Location: "", LocationName: "ruleAction"}, "Egress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "egress"}, "IcmpTypeCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IcmpTypeCode", Location: "", LocationName: "Icmp"}, "PortRange": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PortRange", Location: "", LocationName: "portRange"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}, "RuleNumber": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "ruleNumber"}, "Protocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "protocol"}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrBlock"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSpotDatafeedSubscriptionRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DetachInternetGatewayRequest": main.Shape{Type: "structure", Required: []string{"InternetGatewayId", "VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InternetGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "internetGatewayId"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "RejectVpcPeeringConnectionRequest": main.Shape{Type: "structure", Required: []string{"VpcPeeringConnectionId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}}, Pattern: "", Max: 0, Min: 0}, "RequestSpotInstancesRequest": main.Shape{Type: "structure", Required: []string{"SpotPrice"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceType", Location: "", LocationName: "type"}, "LaunchGroup": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "launchGroup"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SpotPrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "spotPrice"}, "InstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "instanceCount"}, "LaunchSpecification": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RequestSpotLaunchSpecification", Location: "", LocationName: ""}, "ValidFrom": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "validFrom"}, "ValidUntil": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "validUntil"}, "AvailabilityZoneGroup": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZoneGroup"}}, Pattern: "", Max: 0, Min: 0}, "SnapshotAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Integer": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "NetworkAclAssociationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "GetPasswordDataRequest": main.Shape{Type: "structure", Required: []string{"InstanceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Image": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "name"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingList", Location: "", LocationName: "blockDeviceMapping"}, "VirtualizationType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VirtualizationType", Location: "", LocationName: "virtualizationType"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ramdiskId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "Architecture": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ArchitectureValues", Location: "", LocationName: "architecture"}, "Platform": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlatformValues", Location: "", LocationName: "platform"}, "RootDeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "rootDeviceName"}, "ImageLocation": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageLocation"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImageState", Location: "", LocationName: "imageState"}, "ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeList", Location: "", LocationName: "productCodes"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kernelId"}, "SriovNetSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sriovNetSupport"}, "StateReason": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "StateReason", Location: "", LocationName: "stateReason"}, "ImageOwnerAlias": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageOwnerAlias"}, "RootDeviceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DeviceType", Location: "", LocationName: "rootDeviceType"}, "OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageOwnerId"}, "Public": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "isPublic"}, "ImageType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImageTypeValues", Location: "", LocationName: "imageType"}, "Hypervisor": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "HypervisorType", Location: "", LocationName: "hypervisor"}}, Pattern: "", Max: 0, Min: 0}, "InternetGatewayAttachment": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttachmentStatus", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "StartInstancesRequest": main.Shape{Type: "structure", Required: []string{"InstanceIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}, "AdditionalInfo": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "additionalInfo"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "AccountAttributeValueList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateDhcpOptionsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DhcpOptions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DhcpOptions", Location: "", LocationName: "dhcpOptions"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesList", Location: "", LocationName: "reservedInstancesSet"}}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZoneState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateSubnetResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Subnet": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Subnet", Location: "", LocationName: "subnet"}}, Pattern: "", Max: 0, Min: 0}, "ExportTaskIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InternetGatewayAttachmentList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstanceLimitPrice": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Amount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Double", Location: "", LocationName: "amount"}, "CurrencyCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CurrencyCodeValues", Location: "", LocationName: "currencyCode"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesModificationsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesModifications": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesModificationList", Location: "", LocationName: "reservedInstancesModificationsSet"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSubnetsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Subnets": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SubnetList", Location: "", LocationName: "subnetSet"}}, Pattern: "", Max: 0, Min: 0}, "MonitoringState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstancesListing": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StatusMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "statusMessage"}, "PriceSchedules": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PriceScheduleList", Location: "", LocationName: "priceSchedules"}, "ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}, "UpdateDate": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "updateDate"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ListingStatus", Location: "", LocationName: "status"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "clientToken"}, "ReservedInstancesListingId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesListingId"}, "CreateDate": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "createDate"}, "InstanceCounts": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceCountList", Location: "", LocationName: "instanceCounts"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSubnetsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SubnetIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SubnetIdStringList", Location: "", LocationName: "SubnetId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DescribeTagsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagDescriptionList", Location: "", LocationName: "tagSet"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "PriceScheduleSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Term": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "term"}, "Price": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Double", Location: "", LocationName: "price"}, "CurrencyCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CurrencyCodeValues", Location: "", LocationName: "currencyCode"}}, Pattern: "", Max: 0, Min: 0}, "SnapshotState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SubnetList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeKeyPairsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"KeyPairs": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "KeyPairList", Location: "", LocationName: "keySet"}}, Pattern: "", Max: 0, Min: 0}, "DhcpOptionsIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DhcpOptions": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DhcpConfigurations": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DhcpConfigurationList", Location: "", LocationName: "dhcpConfigurationSet"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "DhcpOptionsId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "dhcpOptionsId"}}, Pattern: "", Max: 0, Min: 0}, "ProductCodeValues": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "TerminateInstancesRequest": main.Shape{Type: "structure", Required: []string{"InstanceIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeAccountAttributesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AccountAttributes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AccountAttributeList", Location: "", LocationName: "accountAttributeSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribePlacementGroupsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PlacementGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlacementGroupList", Location: "", LocationName: "placementGroupSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeAvailabilityZonesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ZoneNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ZoneNameStringList", Location: "", LocationName: "ZoneName"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "DescribeBundleTasksResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"BundleTasks": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BundleTaskList", Location: "", LocationName: "bundleInstanceTasksSet"}}, Pattern: "", Max: 0, Min: 0}, "InstanceList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AuthorizeSecurityGroupIngressRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "IpProtocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "ToPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "IpPermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpPermissionList", Location: "", LocationName: ""}, "SourceSecurityGroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "SourceSecurityGroupOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "FromPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "CidrIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DetachVpnGatewayRequest": main.Shape{Type: "structure", Required: []string{"VpnGatewayId", "VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpnGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ResourceType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteVpnConnectionRequest": main.Shape{Type: "structure", Required: []string{"VpnConnectionId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpnConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ModifySnapshotAttributeRequest": main.Shape{Type: "structure", Required: []string{"SnapshotId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SnapshotAttributeName", Location: "", LocationName: ""}, "OperationType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "UserIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "UserIdStringList", Location: "", LocationName: "UserId"}, "GroupNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupNameStringList", Location: "", LocationName: "UserGroup"}, "CreateVolumePermission": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CreateVolumePermissionModifications", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeExportTasksResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ExportTasks": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportTaskList", Location: "", LocationName: "exportTaskSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVpcsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Vpcs": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcList", Location: "", LocationName: "vpcSet"}}, Pattern: "", Max: 0, Min: 0}, "DetachVolumeRequest": main.Shape{Type: "structure", Required: []string{"VolumeId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Device": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Force": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SnapshotIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AccountAttributeValue": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AttributeValue": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attributeValue"}}, Pattern: "", Max: 0, Min: 0}, "DeleteSecurityGroupRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusEvent": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"EventType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "eventType"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "NotBefore": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "notBefore"}, "NotAfter": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "notAfter"}, "EventId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "eventId"}}, Pattern: "", Max: 0, Min: 0}, "VpcAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpcPeeringConnectionStateReason": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "code"}, "Message": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "message"}}, Pattern: "", Max: 0, Min: 0}, "VpnStaticRoute": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "destinationCidrBlock"}, "Source": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnStaticRouteSource", Location: "", LocationName: "source"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnState", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "AllocateAddressResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Domain": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DomainType", Location: "", LocationName: "domain"}, "AllocationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "allocationId"}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "publicIp"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSpotInstanceRequestsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SpotInstanceRequests": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceRequestList", Location: "", LocationName: "spotInstanceRequestSet"}}, Pattern: "", Max: 0, Min: 0}, "RegisterImageResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}}, Pattern: "", Max: 0, Min: 0}, "ReplaceNetworkAclAssociationResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NewAssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "newAssociationId"}}, Pattern: "", Max: 0, Min: 0}, "ResetNetworkInterfaceAttributeRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sourceDestCheck"}}, Pattern: "", Max: 0, Min: 0}, "GetConsoleOutputResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Timestamp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "timestamp"}, "Output": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "output"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}}, Pattern: "", Max: 0, Min: 0}, "KeyPairList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RecurringChargeFrequency": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeSnapshotAttributeRequest": main.Shape{Type: "structure", Required: []string{"SnapshotId", "Attribute"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SnapshotAttributeName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "FilterList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "KeyPair": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"KeyMaterial": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyMaterial"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "KeyFingerprint": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyFingerprint"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesOfferingList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AttachNetworkInterfaceRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId", "InstanceId", "DeviceIndex"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "DeviceIndex": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "deviceIndex"}}, Pattern: "", Max: 0, Min: 0}, "CreateVpnConnectionRequest": main.Shape{Type: "structure", Required: []string{"Type", "CustomerGatewayId", "VpnGatewayId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "CustomerGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "VpnGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Options": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnConnectionOptionsSpecification", Location: "", LocationName: "options"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesModification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedIntancesIds", Location: "", LocationName: "reservedInstancesSet"}, "ModificationResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesModificationResultList", Location: "", LocationName: "modificationResultSet"}, "EffectiveDate": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "effectiveDate"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "status"}, "StatusMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "statusMessage"}, "ReservedInstancesModificationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesModificationId"}, "CreateDate": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "createDate"}, "UpdateDate": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "updateDate"}, "ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "clientToken"}}, Pattern: "", Max: 0, Min: 0}, "ResetInstanceAttributeRequest": main.Shape{Type: "structure", Required: []string{"InstanceId", "Attribute"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceAttributeName", Location: "", LocationName: "attribute"}}, Pattern: "", Max: 0, Min: 0}, "ImportInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ConversionTask": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ConversionTask", Location: "", LocationName: "conversionTask"}}, Pattern: "", Max: 0, Min: 0}, "InstanceMonitoringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceNetworkInterfaceAssociation": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"IpOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipOwnerId"}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "publicIp"}, "PublicDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "publicDnsName"}}, Pattern: "", Max: 0, Min: 0}, "RouteState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SecurityGroupIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Snapshot": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StartTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "startTime"}, "Progress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "progress"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "VolumeSize": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "volumeSize"}, "OwnerAlias": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerAlias"}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "snapshotId"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SnapshotState", Location: "", LocationName: "status"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "Encrypted": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "encrypted"}, "KmsKeyId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kmsKeyId"}, "OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}}, Pattern: "", Max: 0, Min: 0}, "ArchitectureValues": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeVolumesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "Volumes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeList", Location: "", LocationName: "volumeSet"}}, Pattern: "", Max: 0, Min: 0}, "ExecutableByStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ExportEnvironment": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Blob": main.Shape{Type: "blob", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeTagsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "maxResults"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVolumeStatusRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeIdStringList", Location: "", LocationName: "VolumeId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeInternetGatewaysResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InternetGateways": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InternetGatewayList", Location: "", LocationName: "internetGatewaySet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSnapshotAttributeResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "snapshotId"}, "CreateVolumePermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CreateVolumePermissionList", Location: "", LocationName: "createVolumePermission"}, "ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeList", Location: "", LocationName: "productCodes"}}, Pattern: "", Max: 0, Min: 0}, "DisableVgwRoutePropagationRequest": main.Shape{Type: "structure", Required: []string{"RouteTableId", "GatewayId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "GatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PublicIpStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstancesModificationResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"TargetConfiguration": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesConfiguration", Location: "", LocationName: "targetConfiguration"}, "ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}}, Pattern: "", Max: 0, Min: 0}, "StopInstancesRequest": main.Shape{Type: "structure", Required: []string{"InstanceIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Force": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "force"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}}, Pattern: "", Max: 0, Min: 0}, "ConfirmProductInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}}, Pattern: "", Max: 0, Min: 0}, "CreateVolumeRequest": main.Shape{Type: "structure", Required: []string{"AvailabilityZone"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Size": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "VolumeType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeType", Location: "", LocationName: ""}, "Iops": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "Encrypted": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "encrypted"}, "KmsKeyId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DhcpConfiguration": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Key": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "key"}, "Values": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DhcpConfigurationValueList", Location: "", LocationName: "valueSet"}}, Pattern: "", Max: 0, Min: 0}, "DisassociateRouteTableRequest": main.Shape{Type: "structure", Required: []string{"AssociationId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}}, Pattern: "", Max: 0, Min: 0}, "LaunchPermissionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RouteTableAssociation": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RouteTableAssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableAssociationId"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "Main": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "main"}}, Pattern: "", Max: 0, Min: 0}, "VgwTelemetryList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreatePlacementGroupRequest": main.Shape{Type: "structure", Required: []string{"GroupName", "Strategy"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}, "Strategy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlacementStrategy", Location: "", LocationName: "strategy"}}, Pattern: "", Max: 0, Min: 0}, "CreateSpotDatafeedSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SpotDatafeedSubscription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotDatafeedSubscription", Location: "", LocationName: "spotDatafeedSubscription"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstances": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"End": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "end"}, "UsagePrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Float", Location: "", LocationName: "usagePrice"}, "InstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "instanceCount"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstanceState", Location: "", LocationName: "state"}, "InstanceTenancy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Tenancy", Location: "", LocationName: "instanceTenancy"}, "CurrencyCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CurrencyCodeValues", Location: "", LocationName: "currencyCode"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Start": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "start"}, "Duration": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "duration"}, "FixedPrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Float", Location: "", LocationName: "fixedPrice"}, "RecurringCharges": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RecurringChargesList", Location: "", LocationName: "recurringCharges"}, "OfferingType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "OfferingTypeValues", Location: "", LocationName: "offeringType"}, "ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "ProductDescription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RIProductDescription", Location: "", LocationName: "productDescription"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}}, Pattern: "", Max: 0, Min: 0}, "VpnConnectionOptionsSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StaticRoutesOnly": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "staticRoutesOnly"}}, Pattern: "", Max: 0, Min: 0}, "InstanceStatus": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Events": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStatusEventList", Location: "", LocationName: "eventsSet"}, "InstanceState": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceState", Location: "", LocationName: "instanceState"}, "SystemStatus": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStatusSummary", Location: "", LocationName: "systemStatus"}, "InstanceStatus": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStatusSummary", Location: "", LocationName: "instanceStatus"}}, Pattern: "", Max: 0, Min: 0}, "IpRangeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CopySnapshotRequest": main.Shape{Type: "structure", Required: []string{"SourceRegion", "SourceSnapshotId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SourceRegion": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "SourceSnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DestinationRegion": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "destinationRegion"}, "PresignedUrl": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "presignedUrl"}}, Pattern: "", Max: 0, Min: 0}, "PropagatingVgw": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "gatewayId"}}, Pattern: "", Max: 0, Min: 0}, "RouteTableAssociationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RunInstancesRequest": main.Shape{Type: "structure", Required: []string{"ImageId", "MinCount", "MaxCount"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"MaxCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "SecurityGroupIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupIdStringList", Location: "", LocationName: "SecurityGroupId"}, "UserData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DisableApiTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "disableApiTermination"}, "InstanceInitiatedShutdownBehavior": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ShutdownBehavior", Location: "", LocationName: "instanceInitiatedShutdownBehavior"}, "IamInstanceProfile": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IamInstanceProfileSpecification", Location: "", LocationName: "iamInstanceProfile"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "MinCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "Monitoring": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RunInstancesMonitoringEnabled", Location: "", LocationName: ""}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "clientToken"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: ""}, "Placement": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Placement", Location: "", LocationName: ""}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AdditionalInfo": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "additionalInfo"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingRequestList", Location: "", LocationName: "BlockDeviceMapping"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "NetworkInterfaces": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceSpecificationList", Location: "", LocationName: "networkInterface"}, "EbsOptimized": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "ebsOptimized"}, "SecurityGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupStringList", Location: "", LocationName: "SecurityGroup"}}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZoneMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Message": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "message"}}, Pattern: "", Max: 0, Min: 0}, "ImportKeyPairRequest": main.Shape{Type: "structure", Required: []string{"KeyName", "PublicKeyMaterial"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "PublicKeyMaterial": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Blob", Location: "", LocationName: "publicKeyMaterial"}}, Pattern: "", Max: 0, Min: 0}, "CreateReservedInstancesListingResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesListings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesListingList", Location: "", LocationName: "reservedInstancesListingsSet"}}, Pattern: "", Max: 0, Min: 0}, "CurrencyCodeValues": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeVpcPeeringConnectionsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcPeeringConnections": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcPeeringConnectionList", Location: "", LocationName: "vpcPeeringConnectionSet"}}, Pattern: "", Max: 0, Min: 0}, "InstanceIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceTypeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "S3Storage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AWSAccessKeyId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "UploadPolicy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Blob", Location: "", LocationName: "uploadPolicy"}, "UploadPolicySignature": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "uploadPolicySignature"}, "Bucket": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "bucket"}, "Prefix": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "prefix"}}, Pattern: "", Max: 0, Min: 0}, "AssignPrivateIpAddressesRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "PrivateIpAddresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PrivateIpAddressStringList", Location: "", LocationName: "privateIpAddress"}, "SecondaryPrivateIpAddressCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "secondaryPrivateIpAddressCount"}, "AllowReassignment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "allowReassignment"}}, Pattern: "", Max: 0, Min: 0}, "CreateNetworkAclRequest": main.Shape{Type: "structure", Required: []string{"VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}}, Pattern: "", Max: 0, Min: 0}, "InstanceNetworkInterface": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "MacAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "macAddress"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceStatus", Location: "", LocationName: "status"}, "Attachment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceAttachment", Location: "", LocationName: "attachment"}, "OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}, "PrivateDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateDnsName"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "sourceDestCheck"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "Association": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceAssociation", Location: "", LocationName: "association"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "PrivateIpAddresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstancePrivateIpAddressList", Location: "", LocationName: "privateIpAddressesSet"}}, Pattern: "", Max: 0, Min: 0}, "NetworkAclList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeNetworkAclsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkAcls": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkAclList", Location: "", LocationName: "networkAclSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeRouteTablesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "RouteTableIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "RouteTableId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "DescribeAddressesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PublicIps": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PublicIpStringList", Location: "", LocationName: "PublicIp"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "AllocationIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AllocationIdList", Location: "", LocationName: "AllocationId"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "SecurityGroupList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReasonCodesList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReleaseAddressRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AllocationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SpotInstanceType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpcAttachmentList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ExportTaskState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "MonitorInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceMonitorings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceMonitoringList", Location: "", LocationName: "instancesSet"}}, Pattern: "", Max: 0, Min: 0}, "ImportKeyPairResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "KeyFingerprint": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyFingerprint"}}, Pattern: "", Max: 0, Min: 0}, "InternetGateway": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "InternetGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "internetGatewayId"}, "Attachments": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InternetGatewayAttachmentList", Location: "", LocationName: "attachmentSet"}}, Pattern: "", Max: 0, Min: 0}, "SpotPriceHistoryList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VgwTelemetry": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StatusMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "statusMessage"}, "AcceptedRouteCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "acceptedRouteCount"}, "OutsideIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "outsideIpAddress"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TelemetryStatus", Location: "", LocationName: "status"}, "LastStatusChange": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "lastStatusChange"}}, Pattern: "", Max: 0, Min: 0}, "DiskImage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Volume": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeDetail", Location: "", LocationName: ""}, "Image": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageDetail", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "GroupIdentifierList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ImportVolumeTaskDetails": main.Shape{Type: "structure", Required: []string{"BytesConverted", "AvailabilityZone", "Image", "Volume"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"BytesConverted": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "bytesConverted"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "Image": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageDescription", Location: "", LocationName: "image"}, "Volume": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageVolumeDescription", Location: "", LocationName: "volume"}}, Pattern: "", Max: 0, Min: 0}, "ModifyInstanceAttributeRequest": main.Shape{Type: "structure", Required: []string{"InstanceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "instanceType"}, "Kernel": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "kernel"}, "Ramdisk": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "ramdisk"}, "Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "value"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceBlockDeviceMappingSpecificationList", Location: "", LocationName: "blockDeviceMapping"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdStringList", Location: "", LocationName: "GroupId"}, "EbsOptimized": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "ebsOptimized"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceAttributeName", Location: "", LocationName: "attribute"}, "SriovNetSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "sriovNetSupport"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "DisableApiTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "disableApiTermination"}, "InstanceInitiatedShutdownBehavior": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "instanceInitiatedShutdownBehavior"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: ""}, "UserData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlobAttributeValue", Location: "", LocationName: "userData"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesConfigurationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RuleAction": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateInternetGatewayResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InternetGateway": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InternetGateway", Location: "", LocationName: "internetGateway"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVolumeStatusResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "VolumeStatuses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusList", Location: "", LocationName: "volumeStatusSet"}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusDetailsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AcceptVpcPeeringConnectionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcPeeringConnection": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcPeeringConnection", Location: "", LocationName: "vpcPeeringConnection"}}, Pattern: "", Max: 0, Min: 0}, "ListingStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "UnassignPrivateIpAddressesRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId", "PrivateIpAddresses"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "PrivateIpAddresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PrivateIpAddressStringList", Location: "", LocationName: "privateIpAddress"}}, Pattern: "", Max: 0, Min: 0}, "ImageList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ResetSnapshotAttributeRequest": main.Shape{Type: "structure", Required: []string{"SnapshotId", "Attribute"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SnapshotAttributeName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Float": main.Shape{Type: "float", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ProductDescriptionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReportInstanceStatusRequest": main.Shape{Type: "structure", Required: []string{"Instances", "Status", "ReasonCodes"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Instances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "instanceId"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReportStatusType", Location: "", LocationName: "status"}, "StartTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "startTime"}, "EndTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "endTime"}, "ReasonCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReasonCodesList", Location: "", LocationName: "reasonCode"}}, Pattern: "", Max: 0, Min: 0}, "Volume": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}, "CreateTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "createTime"}, "KmsKeyId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kmsKeyId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeState", Location: "", LocationName: "status"}, "Attachments": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeAttachmentList", Location: "", LocationName: "attachmentSet"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "VolumeType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeType", Location: "", LocationName: "volumeType"}, "Iops": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "iops"}, "Size": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "size"}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "snapshotId"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Encrypted": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "encrypted"}}, Pattern: "", Max: 0, Min: 0}, "CreateSpotDatafeedSubscriptionRequest": main.Shape{Type: "structure", Required: []string{"Bucket"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Bucket": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "bucket"}, "Prefix": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "prefix"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DescribeKeyPairsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "KeyNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "KeyNameStringList", Location: "", LocationName: "KeyName"}}, Pattern: "", Max: 0, Min: 0}, "InstancePrivateIpAddress": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Association": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceAssociation", Location: "", LocationName: "association"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "PrivateDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateDnsName"}, "Primary": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "primary"}}, Pattern: "", Max: 0, Min: 0}, "SpotInstanceRequestList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CustomerGatewayIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeSecurityGroupsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SecurityGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupList", Location: "", LocationName: "securityGroupInfo"}}, Pattern: "", Max: 0, Min: 0}, "CreateNetworkAclResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkAcl": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkAcl", Location: "", LocationName: "networkAcl"}}, Pattern: "", Max: 0, Min: 0}, "CreateSubnetRequest": main.Shape{Type: "structure", Required: []string{"VpcId", "CidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateVpnConnectionRouteRequest": main.Shape{Type: "structure", Required: []string{"VpnConnectionId", "DestinationCidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "VpnConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeDhcpOptionsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DhcpOptions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DhcpOptionsList", Location: "", LocationName: "dhcpOptionsSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeImagesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Images": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImageList", Location: "", LocationName: "imagesSet"}}, Pattern: "", Max: 0, Min: 0}, "ImportInstanceRequest": main.Shape{Type: "structure", Required: []string{"Platform"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "LaunchSpecification": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImportInstanceLaunchSpecification", Location: "", LocationName: "launchSpecification"}, "DiskImages": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageList", Location: "", LocationName: "diskImage"}, "Platform": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlatformValues", Location: "", LocationName: "platform"}}, Pattern: "", Max: 0, Min: 0}, "ModifyVpcAttributeRequest": main.Shape{Type: "structure", Required: []string{"VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "EnableDnsSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: ""}, "EnableDnsHostnames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OfferingTypeValues": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CancelReservedInstancesListingRequest": main.Shape{Type: "structure", Required: []string{"ReservedInstancesListingId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesListingId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesListingId"}}, Pattern: "", Max: 0, Min: 0}, "CancelSpotInstanceRequestsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CancelledSpotInstanceRequests": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CancelledSpotInstanceRequestList", Location: "", LocationName: "spotInstanceRequestSet"}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusActionsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpcIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeRouteTablesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RouteTables": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RouteTableList", Location: "", LocationName: "routeTableSet"}}, Pattern: "", Max: 0, Min: 0}, "ImportInstanceLaunchSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GroupIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupIdStringList", Location: "", LocationName: "GroupId"}, "Architecture": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ArchitectureValues", Location: "", LocationName: "architecture"}, "GroupNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupStringList", Location: "", LocationName: "GroupName"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "Placement": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Placement", Location: "", LocationName: "placement"}, "Monitoring": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "monitoring"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "InstanceInitiatedShutdownBehavior": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ShutdownBehavior", Location: "", LocationName: "instanceInitiatedShutdownBehavior"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "AdditionalInfo": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "additionalInfo"}, "UserData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "userData"}}, Pattern: "", Max: 0, Min: 0}, "VpcPeeringConnectionVpcInfo": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrBlock"}, "OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}}, Pattern: "", Max: 0, Min: 0}, "VpnStaticRouteList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeInstancesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "maxResults"}}, Pattern: "", Max: 0, Min: 0}, "UserIdGroupPair": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"UserId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "userId"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupId"}}, Pattern: "", Max: 0, Min: 0}, "BundleIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateVpnGatewayRequest": main.Shape{Type: "structure", Required: []string{"Type"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GatewayType", Location: "", LocationName: ""}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DetachNetworkInterfaceRequest": main.Shape{Type: "structure", Required: []string{"AttachmentId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AttachmentId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attachmentId"}, "Force": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "force"}}, Pattern: "", Max: 0, Min: 0}, "DiskImageDetail": main.Shape{Type: "structure", Required: []string{"Format", "Bytes", "ImportManifestUrl"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Bytes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "bytes"}, "ImportManifestUrl": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "importManifestUrl"}, "Format": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageFormat", Location: "", LocationName: "format"}}, Pattern: "", Max: 0, Min: 0}, "AttachVpnGatewayResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcAttachment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcAttachment", Location: "", LocationName: "attachment"}}, Pattern: "", Max: 0, Min: 0}, "Boolean": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeRegionsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Regions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RegionList", Location: "", LocationName: "regionInfo"}}, Pattern: "", Max: 0, Min: 0}, "EventCode": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SpotInstanceStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "code"}, "Message": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "message"}}, Pattern: "", Max: 0, Min: 0}, "ValueStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteVolumeRequest": main.Shape{Type: "structure", Required: []string{"VolumeId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeAvailabilityZonesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AvailabilityZones": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AvailabilityZoneList", Location: "", LocationName: "availabilityZoneInfo"}}, Pattern: "", Max: 0, Min: 0}, "RejectVpcPeeringConnectionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Return": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "return"}}, Pattern: "", Max: 0, Min: 0}, "InstanceNetworkInterfaceSpecificationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SecurityGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupDescription"}, "IpPermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpPermissionList", Location: "", LocationName: "ipPermissions"}, "IpPermissionsEgress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpPermissionList", Location: "", LocationName: "ipPermissionsEgress"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}}, Pattern: "", Max: 0, Min: 0}, "Subnet": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SubnetState", Location: "", LocationName: "state"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "AvailableIpAddressCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "availableIpAddressCount"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrBlock"}, "DefaultForAz": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "defaultForAz"}, "MapPublicIpOnLaunch": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "mapPublicIpOnLaunch"}}, Pattern: "", Max: 0, Min: 0}, "VolumeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteKeyPairRequest": main.Shape{Type: "structure", Required: []string{"KeyName"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesOfferingsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesOfferingIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesOfferingIdStringList", Location: "", LocationName: "ReservedInstancesOfferingId"}, "OfferingType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "OfferingTypeValues", Location: "", LocationName: "offeringType"}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "maxResults"}, "IncludeMarketplace": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "ProductDescription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RIProductDescription", Location: "", LocationName: ""}, "InstanceTenancy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Tenancy", Location: "", LocationName: "instanceTenancy"}, "MaxDuration": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: ""}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: ""}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "MinDuration": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: ""}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "MaxInstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TelemetryStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeConversionTasksRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "filter"}, "ConversionTaskIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ConversionIdStringList", Location: "", LocationName: "conversionTaskId"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesOfferingIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PricingDetail": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Count": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "count"}, "Price": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Double", Location: "", LocationName: "price"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesId": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesListingList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SpotInstanceRequestIdList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeSpotDatafeedSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SpotDatafeedSubscription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotDatafeedSubscription", Location: "", LocationName: "spotDatafeedSubscription"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSpotPriceHistoryRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"EndTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "endTime"}, "ProductDescriptions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductDescriptionList", Location: "", LocationName: "ProductDescription"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "maxResults"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceTypes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceTypeList", Location: "", LocationName: "InstanceType"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "StartTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "startTime"}}, Pattern: "", Max: 0, Min: 0}, "Tenancy": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DhcpConfigurationValueList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceStateChange": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PreviousState": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceState", Location: "", LocationName: "previousState"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "CurrentState": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceState", Location: "", LocationName: "currentState"}}, Pattern: "", Max: 0, Min: 0}, "AttachNetworkInterfaceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AttachmentId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attachmentId"}}, Pattern: "", Max: 0, Min: 0}, "CreateVolumePermission": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"UserId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "userId"}, "Group": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PermissionGroup", Location: "", LocationName: "group"}}, Pattern: "", Max: 0, Min: 0}, "DeviceType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "IamInstanceProfile": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Arn": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "arn"}, "Id": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "id"}}, Pattern: "", Max: 0, Min: 0}, "InstanceStatusList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RegisterImageRequest": main.Shape{Type: "structure", Required: []string{"Name"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Architecture": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ArchitectureValues", Location: "", LocationName: "architecture"}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ramdiskId"}, "VirtualizationType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "virtualizationType"}, "SriovNetSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sriovNetSupport"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ImageLocation": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "name"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kernelId"}, "RootDeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "rootDeviceName"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingRequestList", Location: "", LocationName: "BlockDeviceMapping"}}, Pattern: "", Max: 0, Min: 0}, "SpotInstanceState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SubnetState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ConversionIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeImagesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ImageIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImageIdStringList", Location: "", LocationName: "ImageId"}, "Owners": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "OwnerStringList", Location: "", LocationName: "Owner"}, "ExecutableUsers": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExecutableByStringList", Location: "", LocationName: "ExecutableBy"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "RecurringCharge": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Frequency": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RecurringChargeFrequency", Location: "", LocationName: "frequency"}, "Amount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Double", Location: "", LocationName: "amount"}}, Pattern: "", Max: 0, Min: 0}, "ReportInstanceReasonCodes": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SecurityGroupStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeVpcPeeringConnectionsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcPeeringConnectionIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "VpcPeeringConnectionId"}}, Pattern: "", Max: 0, Min: 0}, "GroupNameStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReportStatusType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "BlockDeviceMappingRequestList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceNetworkInterfaceSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}, "PrivateIpAddresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PrivateIpAddressSpecificationList", Location: "", LocationName: "privateIpAddressesSet"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "SecondaryPrivateIpAddressCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "secondaryPrivateIpAddressCount"}, "AssociatePublicIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "associatePublicIpAddress"}, "DeviceIndex": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "deviceIndex"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupIdStringList", Location: "", LocationName: "SecurityGroupId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeRegionsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "RegionNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RegionNameStringList", Location: "", LocationName: "RegionName"}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfaceIdList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PrivateIpAddressSpecificationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpnGatewayIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AssociateDhcpOptionsRequest": main.Shape{Type: "structure", Required: []string{"DhcpOptionsId", "VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "DhcpOptionsId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateVpcRequest": main.Shape{Type: "structure", Required: []string{"CidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "InstanceTenancy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Tenancy", Location: "", LocationName: "instanceTenancy"}}, Pattern: "", Max: 0, Min: 0}, "DeleteVpcPeeringConnectionRequest": main.Shape{Type: "structure", Required: []string{"VpcPeeringConnectionId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeDhcpOptionsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "DhcpOptionsIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DhcpOptionsIdStringList", Location: "", LocationName: "DhcpOptionsId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "DescribeNetworkInterfacesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkInterfaceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceIdList", Location: "", LocationName: "NetworkInterfaceId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "filter"}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterface": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}, "MacAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "macAddress"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "sourceDestCheck"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceStatus", Location: "", LocationName: "status"}, "TagSet": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "PrivateIpAddresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfacePrivateIpAddressList", Location: "", LocationName: "privateIpAddressesSet"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "Association": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceAssociation", Location: "", LocationName: "association"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "RequesterManaged": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "requesterManaged"}, "PrivateDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateDnsName"}, "Attachment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceAttachment", Location: "", LocationName: "attachment"}, "RequesterId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "requesterId"}}, Pattern: "", Max: 0, Min: 0}, "SpotDatafeedSubscription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Prefix": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "prefix"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DatafeedSubscriptionState", Location: "", LocationName: "state"}, "Fault": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceStateFault", Location: "", LocationName: "fault"}, "OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}, "Bucket": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "bucket"}}, Pattern: "", Max: 0, Min: 0}, "ZoneNameStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AssociateRouteTableRequest": main.Shape{Type: "structure", Required: []string{"SubnetId", "RouteTableId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}}, Pattern: "", Max: 0, Min: 0}, "DeleteSnapshotRequest": main.Shape{Type: "structure", Required: []string{"SnapshotId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfaceStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PlacementGroupStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpnConnection": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnState", Location: "", LocationName: "state"}, "CustomerGatewayConfiguration": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "customerGatewayConfiguration"}, "CustomerGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "customerGatewayId"}, "VgwTelemetry": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VgwTelemetryList", Location: "", LocationName: "vgwTelemetry"}, "Options": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnConnectionOptions", Location: "", LocationName: "options"}, "Routes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnStaticRouteList", Location: "", LocationName: "routes"}, "VpnConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpnConnectionId"}, "Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GatewayType", Location: "", LocationName: "type"}, "VpnGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpnGatewayId"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}}, Pattern: "", Max: 0, Min: 0}, "CreateVpcResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Vpc": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Vpc", Location: "", LocationName: "vpc"}}, Pattern: "", Max: 0, Min: 0}, "Monitoring": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "MonitoringState", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "PlacementStrategy": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ResourceIdList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "StateReason": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "code"}, "Message": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "message"}}, Pattern: "", Max: 0, Min: 0}, "Storage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"S3": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "S3Storage", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "BundleTaskError": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Message": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "message"}, "Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "code"}}, Pattern: "", Max: 0, Min: 0}, "CreateRouteTableRequest": main.Shape{Type: "structure", Required: []string{"VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstanceState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstancesConfiguration": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Platform": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "platform"}, "InstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "instanceCount"}}, Pattern: "", Max: 0, Min: 0}, "RouteList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateInternetGatewayRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "CustomerGateway": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"BgpAsn": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "bgpAsn"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "CustomerGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "customerGatewayId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "state"}, "Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "type"}, "IpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipAddress"}}, Pattern: "", Max: 0, Min: 0}, "InstanceBlockDeviceMapping": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "deviceName"}, "Ebs": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "EbsInstanceBlockDevice", Location: "", LocationName: "ebs"}}, Pattern: "", Max: 0, Min: 0}, "ModifyNetworkInterfaceAttributeRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "description"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "sourceDestCheck"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupIdStringList", Location: "", LocationName: "SecurityGroupId"}, "Attachment": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceAttachmentChanges", Location: "", LocationName: "attachment"}}, Pattern: "", Max: 0, Min: 0}, "VpcState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "NewDhcpConfigurationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteTagsRequest": main.Shape{Type: "structure", Required: []string{"Resources"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Resources": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ResourceIdList", Location: "", LocationName: "resourceId"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tag"}}, Pattern: "", Max: 0, Min: 0}, "DescribeConversionTasksResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ConversionTasks": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DescribeConversionTaskList", Location: "", LocationName: "conversionTasks"}}, Pattern: "", Max: 0, Min: 0}, "EnableVgwRoutePropagationRequest": main.Shape{Type: "structure", Required: []string{"RouteTableId", "GatewayId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InstanceStatusEventList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ModifyReservedInstancesRequest": main.Shape{Type: "structure", Required: []string{"ReservedInstancesIds", "TargetConfigurations"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"TargetConfigurations": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesConfigurationList", Location: "", LocationName: "ReservedInstancesConfigurationSetItemType"}, "ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "clientToken"}, "ReservedInstancesIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesIdStringList", Location: "", LocationName: "ReservedInstancesId"}}, Pattern: "", Max: 0, Min: 0}, "PlacementGroupState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Address": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Domain": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DomainType", Location: "", LocationName: "domain"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "NetworkInterfaceOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceOwnerId"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "publicIp"}, "AllocationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "allocationId"}, "AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}}, Pattern: "", Max: 0, Min: 0}, "DeleteNetworkAclRequest": main.Shape{Type: "structure", Required: []string{"NetworkAclId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}}, Pattern: "", Max: 0, Min: 0}, "RecurringChargesList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateDhcpOptionsRequest": main.Shape{Type: "structure", Required: []string{"DhcpConfigurations"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DhcpConfigurations": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NewDhcpConfigurationList", Location: "", LocationName: "dhcpConfiguration"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "EbsInstanceBlockDevice": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AttachTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "attachTime"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttachmentStatus", Location: "", LocationName: "status"}}, Pattern: "", Max: 0, Min: 0}, "VolumeAttachmentState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpcList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ImportInstanceTaskDetails": main.Shape{Type: "structure", Required: []string{"Volumes"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Volumes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImportInstanceVolumeDetailSet", Location: "", LocationName: "volumes"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "Platform": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlatformValues", Location: "", LocationName: "platform"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}}, Pattern: "", Max: 0, Min: 0}, "InstanceStatusDetailsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CancelBundleTaskRequest": main.Shape{Type: "structure", Required: []string{"BundleId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "BundleId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateVolumePermissionModifications": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Add": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CreateVolumePermissionList", Location: "", LocationName: ""}, "Remove": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CreateVolumePermissionList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RevokeSecurityGroupIngressRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SourceSecurityGroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "IpProtocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "CidrIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "SourceSecurityGroupOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "FromPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "ToPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "IpPermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpPermissionList", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVpnConnectionsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpnConnections": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnConnectionList", Location: "", LocationName: "vpnConnectionSet"}}, Pattern: "", Max: 0, Min: 0}, "ExportToS3Task": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DiskImageFormat": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageFormat", Location: "", LocationName: "diskImageFormat"}, "ContainerFormat": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ContainerFormat", Location: "", LocationName: "containerFormat"}, "S3Bucket": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "s3Bucket"}, "S3Key": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "s3Key"}}, Pattern: "", Max: 0, Min: 0}, "EbsInstanceBlockDeviceSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}}, Pattern: "", Max: 0, Min: 0}, "ImageIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "NetworkAclEntryList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RIProductDescription": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpcPeeringConnection": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RequesterVpcInfo": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcPeeringConnectionVpcInfo", Location: "", LocationName: "requesterVpcInfo"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcPeeringConnectionStateReason", Location: "", LocationName: "status"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}, "AccepterVpcInfo": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcPeeringConnectionVpcInfo", Location: "", LocationName: "accepterVpcInfo"}, "ExpirationTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "expirationTime"}}, Pattern: "", Max: 0, Min: 0}, "ConfirmProductInstanceRequest": main.Shape{Type: "structure", Required: []string{"ProductCode", "InstanceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ProductCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateImageResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}}, Pattern: "", Max: 0, Min: 0}, "DhcpOptionsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AttachVolumeRequest": main.Shape{Type: "structure", Required: []string{"VolumeId", "InstanceId", "Device"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Device": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeVpcAttributeResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "EnableDnsSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "enableDnsSupport"}, "EnableDnsHostnames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "enableDnsHostnames"}}, Pattern: "", Max: 0, Min: 0}, "DisassociateAddressRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesOffering": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CurrencyCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CurrencyCodeValues", Location: "", LocationName: "currencyCode"}, "OfferingType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "OfferingTypeValues", Location: "", LocationName: "offeringType"}, "Marketplace": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "marketplace"}, "PricingDetails": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PricingDetailsList", Location: "", LocationName: "pricingDetailsSet"}, "ReservedInstancesOfferingId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesOfferingId"}, "UsagePrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Float", Location: "", LocationName: "usagePrice"}, "ProductDescription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RIProductDescription", Location: "", LocationName: "productDescription"}, "FixedPrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Float", Location: "", LocationName: "fixedPrice"}, "InstanceTenancy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Tenancy", Location: "", LocationName: "instanceTenancy"}, "RecurringCharges": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RecurringChargesList", Location: "", LocationName: "recurringCharges"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Duration": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "duration"}}, Pattern: "", Max: 0, Min: 0}, "VolumeAttachmentList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteNetworkAclEntryRequest": main.Shape{Type: "structure", Required: []string{"NetworkAclId", "RuleNumber", "Egress"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}, "RuleNumber": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "ruleNumber"}, "Egress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "egress"}}, Pattern: "", Max: 0, Min: 0}, "DeleteRouteRequest": main.Shape{Type: "structure", Required: []string{"RouteTableId", "DestinationCidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}, "DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "destinationCidrBlock"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesOfferingsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesOfferings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesOfferingList", Location: "", LocationName: "reservedInstancesOfferingsSet"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "DescribeSecurityGroupsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupNameStringList", Location: "", LocationName: "GroupName"}, "GroupIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdStringList", Location: "", LocationName: "GroupId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "AllocationIdList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ConversionTask": main.Shape{Type: "structure", Required: []string{"ConversionTaskId", "State"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ConversionTaskState", Location: "", LocationName: "state"}, "StatusMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "statusMessage"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "ConversionTaskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "conversionTaskId"}, "ExpirationTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "expirationTime"}, "ImportInstance": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImportInstanceTaskDetails", Location: "", LocationName: "importInstance"}, "ImportVolume": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImportVolumeTaskDetails", Location: "", LocationName: "importVolume"}}, Pattern: "", Max: 0, Min: 0}, "IpPermission": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"IpProtocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipProtocol"}, "FromPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "fromPort"}, "ToPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "toPort"}, "UserIdGroupPairs": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "UserIdGroupPairList", Location: "", LocationName: "groups"}, "IpRanges": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpRangeList", Location: "", LocationName: "ipRanges"}}, Pattern: "", Max: 0, Min: 0}, "ProductCodeStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstancesModificationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RestorableByStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "StartInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StartingInstances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStateChangeList", Location: "", LocationName: "instancesSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeAddressesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Addresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AddressList", Location: "", LocationName: "addressesSet"}}, Pattern: "", Max: 0, Min: 0}, "InstanceStatusDetails": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "StatusName", Location: "", LocationName: "name"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "StatusType", Location: "", LocationName: "status"}, "ImpairedSince": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "impairedSince"}}, Pattern: "", Max: 0, Min: 0}, "DiskImageFormat": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ExportTask": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ExportTaskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "exportTaskId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportTaskState", Location: "", LocationName: "state"}, "StatusMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "statusMessage"}, "InstanceExportDetails": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceExportDetails", Location: "", LocationName: "instanceExport"}, "ExportToS3Task": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportToS3Task", Location: "", LocationName: "exportToS3"}}, Pattern: "", Max: 0, Min: 0}, "MonitorInstancesRequest": main.Shape{Type: "structure", Required: []string{"InstanceIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfacePrivateIpAddressList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstancesList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SpotPrice": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "ProductDescription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RIProductDescription", Location: "", LocationName: "productDescription"}, "SpotPrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "spotPrice"}, "Timestamp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "timestamp"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}}, Pattern: "", Max: 0, Min: 0}, "AccountAttributeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DiskImageDescription": main.Shape{Type: "structure", Required: []string{"Format", "Size", "ImportManifestUrl"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Format": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageFormat", Location: "", LocationName: "format"}, "Size": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "size"}, "ImportManifestUrl": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "importManifestUrl"}, "Checksum": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "checksum"}}, Pattern: "", Max: 0, Min: 0}, "String": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ImportVolumeRequest": main.Shape{Type: "structure", Required: []string{"AvailabilityZone", "Image", "Volume"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Volume": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeDetail", Location: "", LocationName: "volume"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "Image": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageDetail", Location: "", LocationName: "image"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}}, Pattern: "", Max: 0, Min: 0}, "ModifyVolumeAttributeRequest": main.Shape{Type: "structure", Required: []string{"VolumeId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AutoEnableIO": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RevokeSecurityGroupEgressRequest": main.Shape{Type: "structure", Required: []string{"GroupId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupId"}, "SourceSecurityGroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sourceSecurityGroupName"}, "SourceSecurityGroupOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sourceSecurityGroupOwnerId"}, "IpProtocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipProtocol"}, "FromPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "fromPort"}, "CidrIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrIp"}, "IpPermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpPermissionList", Location: "", LocationName: "ipPermissions"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ToPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "toPort"}}, Pattern: "", Max: 0, Min: 0}, "AttributeBooleanValue": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "value"}}, Pattern: "", Max: 0, Min: 0}, "CancelledSpotInstanceRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SpotInstanceRequestId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "spotInstanceRequestId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CancelSpotInstanceRequestState", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "DescribeNetworkInterfacesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkInterfaces": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceList", Location: "", LocationName: "networkInterfaceSet"}}, Pattern: "", Max: 0, Min: 0}, "Filter": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Values": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "Value"}}, Pattern: "", Max: 0, Min: 0}, "HypervisorType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceLifecycleType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReplaceRouteTableAssociationRequest": main.Shape{Type: "structure", Required: []string{"AssociationId", "RouteTableId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}}, Pattern: "", Max: 0, Min: 0}, "DeleteVpcPeeringConnectionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Return": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "return"}}, Pattern: "", Max: 0, Min: 0}, "DeregisterImageRequest": main.Shape{Type: "structure", Required: []string{"ImageId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ModifyImageAttributeRequest": main.Shape{Type: "structure", Required: []string{"ImageId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "OperationType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "UserGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "UserGroupStringList", Location: "", LocationName: "UserGroup"}, "LaunchPermission": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "LaunchPermissionModifications", Location: "", LocationName: ""}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "UserIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "UserIdStringList", Location: "", LocationName: "UserId"}, "ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeStringList", Location: "", LocationName: "ProductCode"}, "Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReplaceNetworkAclAssociationRequest": main.Shape{Type: "structure", Required: []string{"AssociationId", "NetworkAclId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}}, Pattern: "", Max: 0, Min: 0}, "ExportTaskList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceNetworkInterfaceAttachment": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DeviceIndex": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "deviceIndex"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttachmentStatus", Location: "", LocationName: "status"}, "AttachTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "attachTime"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}, "AttachmentId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attachmentId"}}, Pattern: "", Max: 0, Min: 0}, "ReservedIntancesIds": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "SnapshotList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateSecurityGroupRequest": main.Shape{Type: "structure", Required: []string{"GroupName", "Description"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "GroupDescription"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InstanceNetworkInterfaceList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribePlacementGroupsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "GroupNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlacementGroupStringList", Location: "", LocationName: "groupName"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfaceAttribute": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateInstanceExportTaskResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ExportTask": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ExportTask", Location: "", LocationName: "exportTask"}}, Pattern: "", Max: 0, Min: 0}, "PriceScheduleSpecificationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeSnapshotsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Snapshots": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SnapshotList", Location: "", LocationName: "snapshotSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVolumeAttributeResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}, "AutoEnableIO": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "autoEnableIO"}, "ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeList", Location: "", LocationName: "productCodes"}}, Pattern: "", Max: 0, Min: 0}, "CreateReservedInstancesListingRequest": main.Shape{Type: "structure", Required: []string{"ReservedInstancesId", "InstanceCount", "PriceSchedules", "ClientToken"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "clientToken"}, "ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}, "InstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "instanceCount"}, "PriceSchedules": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PriceScheduleSpecificationList", Location: "", LocationName: "priceSchedules"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesListingsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesListingId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesListingId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "filters"}, "ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeInstanceStatusRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "IncludeAllInstances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "includeAllInstances"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}}, Pattern: "", Max: 0, Min: 0}, "RequestSpotInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SpotInstanceRequests": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceRequestList", Location: "", LocationName: "spotInstanceRequestSet"}}, Pattern: "", Max: 0, Min: 0}, "CreateNetworkAclEntryRequest": main.Shape{Type: "structure", Required: []string{"NetworkAclId", "RuleNumber", "Protocol", "RuleAction", "Egress", "CidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Protocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "protocol"}, "RuleAction": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RuleAction", Location: "", LocationName: "ruleAction"}, "Egress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "egress"}, "IcmpTypeCode": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IcmpTypeCode", Location: "", LocationName: "Icmp"}, "RuleNumber": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "ruleNumber"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}, "CidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrBlock"}, "PortRange": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PortRange", Location: "", LocationName: "portRange"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "CreateNetworkInterfaceRequest": main.Shape{Type: "structure", Required: []string{"SubnetId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SecondaryPrivateIpAddressCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "secondaryPrivateIpAddressCount"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SecurityGroupIdStringList", Location: "", LocationName: "SecurityGroupId"}, "PrivateIpAddresses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PrivateIpAddressSpecificationList", Location: "", LocationName: "privateIpAddresses"}}, Pattern: "", Max: 0, Min: 0}, "NewDhcpConfiguration": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Key": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "key"}, "Values": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "Value"}}, Pattern: "", Max: 0, Min: 0}, "NetworkAclAssociation": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkAclAssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclAssociationId"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}}, Pattern: "", Max: 0, Min: 0}, "Reservation": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservationId"}, "OwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ownerId"}, "RequesterId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "requesterId"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "Instances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceList", Location: "", LocationName: "instancesSet"}}, Pattern: "", Max: 0, Min: 0}, "ExportToS3TaskSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DiskImageFormat": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DiskImageFormat", Location: "", LocationName: "diskImageFormat"}, "ContainerFormat": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ContainerFormat", Location: "", LocationName: "containerFormat"}, "S3Bucket": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "s3Bucket"}, "S3Prefix": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "s3Prefix"}}, Pattern: "", Max: 0, Min: 0}, "LaunchPermissionModifications": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Add": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "LaunchPermissionList", Location: "", LocationName: ""}, "Remove": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "LaunchPermissionList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ModifySubnetAttributeRequest": main.Shape{Type: "structure", Required: []string{"SubnetId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "MapPublicIpOnLaunch": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StatusType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "TerminateInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"TerminatingInstances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStateChangeList", Location: "", LocationName: "instancesSet"}}, Pattern: "", Max: 0, Min: 0}, "VpnState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AvailabilityZone": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RegionName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "regionName"}, "Messages": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AvailabilityZoneMessageList", Location: "", LocationName: "messageSet"}, "ZoneName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "zoneName"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AvailabilityZoneState", Location: "", LocationName: "zoneState"}}, Pattern: "", Max: 0, Min: 0}, "DescribeNetworkInterfaceAttributeRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceAttribute", Location: "", LocationName: "attribute"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AccountAttributeNameStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PlacementGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}, "Strategy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlacementStrategy", Location: "", LocationName: "strategy"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlacementGroupState", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusItem": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "VolumeStatus": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusInfo", Location: "", LocationName: "volumeStatus"}, "Events": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusEventsList", Location: "", LocationName: "eventsSet"}, "Actions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusActionsList", Location: "", LocationName: "actionsSet"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}}, Pattern: "", Max: 0, Min: 0}, "VpnConnectionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Placement": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}, "Tenancy": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Tenancy", Location: "", LocationName: "tenancy"}}, Pattern: "", Max: 0, Min: 0}, "PurchaseReservedInstancesOfferingRequest": main.Shape{Type: "structure", Required: []string{"ReservedInstancesOfferingId", "InstanceCount"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceCount": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: ""}, "LimitPrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstanceLimitPrice", Location: "", LocationName: "limitPrice"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ReservedInstancesOfferingId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CancelledSpotInstanceRequestList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeSpotPriceHistoryResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SpotPriceHistory": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotPriceHistoryList", Location: "", LocationName: "spotPriceHistorySet"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "Double": main.Shape{Type: "double", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceBlockDeviceMappingList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VirtualizationType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AssociateAddressRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "AllocationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "AllowReassociation": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "allowReassociation"}}, Pattern: "", Max: 0, Min: 0}, "DeleteRouteTableRequest": main.Shape{Type: "structure", Required: []string{"RouteTableId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesListingsResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesListings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesListingList", Location: "", LocationName: "reservedInstancesListingsSet"}}, Pattern: "", Max: 0, Min: 0}, "PurchaseReservedInstancesOfferingResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesId"}}, Pattern: "", Max: 0, Min: 0}, "CreateRouteTableResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RouteTable": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RouteTable", Location: "", LocationName: "routeTable"}}, Pattern: "", Max: 0, Min: 0}, "DateTime": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteSpotDatafeedSubscriptionRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DescribeImageAttributeRequest": main.Shape{Type: "structure", Required: []string{"ImageId", "Attribute"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ImageAttributeName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfaceAttachmentChanges": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AttachmentId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attachmentId"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}}, Pattern: "", Max: 0, Min: 0}, "ResetImageAttributeRequest": main.Shape{Type: "structure", Required: []string{"ImageId", "Attribute"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ResetImageAttributeName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AssociateRouteTableResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}}, Pattern: "", Max: 0, Min: 0}, "CancelConversionRequest": main.Shape{Type: "structure", Required: []string{"ConversionTaskId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ConversionTaskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "conversionTaskId"}, "ReasonMessage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reasonMessage"}}, Pattern: "", Max: 0, Min: 0}, "DescribeInternetGatewaysRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InternetGatewayIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "internetGatewayId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedInstancesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "ReservedInstancesIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesIdStringList", Location: "", LocationName: "ReservedInstancesId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "OfferingType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "OfferingTypeValues", Location: "", LocationName: "offeringType"}}, Pattern: "", Max: 0, Min: 0}, "Instance": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeList", Location: "", LocationName: "productCodes"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "RootDeviceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DeviceType", Location: "", LocationName: "rootDeviceType"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceBlockDeviceMappingList", Location: "", LocationName: "blockDeviceMapping"}, "NetworkInterfaces": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceList", Location: "", LocationName: "networkInterfaceSet"}, "StateTransitionReason": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reason"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kernelId"}, "Platform": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PlatformValues", Location: "", LocationName: "platform"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "SpotInstanceRequestId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "spotInstanceRequestId"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "InstanceLifecycle": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceLifecycleType", Location: "", LocationName: "instanceLifecycle"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "IamInstanceProfile": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IamInstanceProfile", Location: "", LocationName: "iamInstanceProfile"}, "SriovNetSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sriovNetSupport"}, "PrivateDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateDnsName"}, "StateReason": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "StateReason", Location: "", LocationName: "stateReason"}, "RootDeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "rootDeviceName"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "sourceDestCheck"}, "Hypervisor": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "HypervisorType", Location: "", LocationName: "hypervisor"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "SecurityGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}, "PublicDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "dnsName"}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ramdiskId"}, "Monitoring": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Monitoring", Location: "", LocationName: "monitoring"}, "Architecture": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ArchitectureValues", Location: "", LocationName: "architecture"}, "VirtualizationType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VirtualizationType", Location: "", LocationName: "virtualizationType"}, "ClientToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "clientToken"}, "AmiLaunchIndex": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "amiLaunchIndex"}, "LaunchTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "launchTime"}, "PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "PublicIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipAddress"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceState", Location: "", LocationName: "instanceState"}, "Placement": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Placement", Location: "", LocationName: "placement"}, "EbsOptimized": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "ebsOptimized"}}, Pattern: "", Max: 0, Min: 0}, "TagList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateSnapshotRequest": main.Shape{Type: "structure", Required: []string{"VolumeId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeInstanceAttributeRequest": main.Shape{Type: "structure", Required: []string{"InstanceId", "Attribute"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceAttributeName", Location: "", LocationName: "attribute"}}, Pattern: "", Max: 0, Min: 0}, "ModifyReservedInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesModificationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "reservedInstancesModificationId"}}, Pattern: "", Max: 0, Min: 0}, "PermissionGroup": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "BundleTaskList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceStatusEvent": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "NotBefore": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "notBefore"}, "NotAfter": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "notAfter"}, "Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "EventCode", Location: "", LocationName: "code"}}, Pattern: "", Max: 0, Min: 0}, "RouteOrigin": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeVpnGatewaysRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpnGatewayIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpnGatewayIdStringList", Location: "", LocationName: "VpnGatewayId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "ImageState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RegionNameStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeStatusInfoStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AttachmentStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ImageAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "BundleInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"BundleTask": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BundleTask", Location: "", LocationName: "bundleInstanceTask"}}, Pattern: "", Max: 0, Min: 0}, "ContainerFormat": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateNetworkInterfaceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NetworkInterface": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterface", Location: "", LocationName: "networkInterface"}}, Pattern: "", Max: 0, Min: 0}, "DeleteSubnetRequest": main.Shape{Type: "structure", Required: []string{"SubnetId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "GroupIdentifier": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupId"}}, Pattern: "", Max: 0, Min: 0}, "OwnerStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AddressList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AttachInternetGatewayRequest": main.Shape{Type: "structure", Required: []string{"InternetGatewayId", "VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InternetGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "internetGatewayId"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "Region": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RegionName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "regionName"}, "Endpoint": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "regionEndpoint"}}, Pattern: "", Max: 0, Min: 0}, "RunInstancesMonitoringEnabled": main.Shape{Type: "structure", Required: []string{"Enabled"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Enabled": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "enabled"}}, Pattern: "", Max: 0, Min: 0}, "DeleteInternetGatewayRequest": main.Shape{Type: "structure", Required: []string{"InternetGatewayId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InternetGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "internetGatewayId"}}, Pattern: "", Max: 0, Min: 0}, "ImportVolumeResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ConversionTask": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ConversionTask", Location: "", LocationName: "conversionTask"}}, Pattern: "", Max: 0, Min: 0}, "BundleTaskState": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CopyImageResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}}, Pattern: "", Max: 0, Min: 0}, "KeyPairInfo": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "KeyFingerprint": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyFingerprint"}}, Pattern: "", Max: 0, Min: 0}, "BlockDeviceMapping": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VirtualName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "virtualName"}, "DeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "deviceName"}, "Ebs": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "EbsBlockDevice", Location: "", LocationName: "ebs"}, "NoDevice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "noDevice"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVolumeAttributeRequest": main.Shape{Type: "structure", Required: []string{"VolumeId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Attribute": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeAttributeName", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeAccountAttributesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "AttributeNames": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AccountAttributeNameStringList", Location: "", LocationName: "attributeName"}}, Pattern: "", Max: 0, Min: 0}, "DescribeVolumesRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VolumeIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeIdStringList", Location: "", LocationName: "VolumeId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}, "MaxResults": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "maxResults"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "ReservedInstancesModificationResultList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ShutdownBehavior": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RequestSpotLaunchSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AddressingType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "addressingType"}, "NetworkInterfaces": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceSpecificationList", Location: "", LocationName: "NetworkInterface"}, "EbsOptimized": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "ebsOptimized"}, "SecurityGroupIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "SecurityGroupId"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "Placement": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotPlacement", Location: "", LocationName: "placement"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingList", Location: "", LocationName: "blockDeviceMapping"}, "Monitoring": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RunInstancesMonitoringEnabled", Location: "", LocationName: "monitoring"}, "SecurityGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "SecurityGroup"}, "UserData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "userData"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kernelId"}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ramdiskId"}, "IamInstanceProfile": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IamInstanceProfileSpecification", Location: "", LocationName: "iamInstanceProfile"}}, Pattern: "", Max: 0, Min: 0}, "CreateCustomerGatewayResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CustomerGateway": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CustomerGateway", Location: "", LocationName: "customerGateway"}}, Pattern: "", Max: 0, Min: 0}, "DeleteVpcRequest": main.Shape{Type: "structure", Required: []string{"VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateVpcPeeringConnectionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcPeeringConnection": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VpcPeeringConnection", Location: "", LocationName: "vpcPeeringConnection"}}, Pattern: "", Max: 0, Min: 0}, "EbsBlockDevice": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"SnapshotId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "snapshotId"}, "VolumeSize": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "volumeSize"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}, "VolumeType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeType", Location: "", LocationName: "volumeType"}, "Iops": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "iops"}, "Encrypted": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "encrypted"}}, Pattern: "", Max: 0, Min: 0}, "InstanceStateName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedInstancesModificationIdStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "AttachVpnGatewayRequest": main.Shape{Type: "structure", Required: []string{"VpnGatewayId", "VpcId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpnGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateSecurityGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupId"}}, Pattern: "", Max: 0, Min: 0}, "SpotInstanceRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceType", Location: "", LocationName: "type"}, "ValidUntil": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "validUntil"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "LaunchedAvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "launchedAvailabilityZone"}, "SpotInstanceRequestId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "spotInstanceRequestId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceState", Location: "", LocationName: "state"}, "Fault": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceStateFault", Location: "", LocationName: "fault"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotInstanceStatus", Location: "", LocationName: "status"}, "ProductDescription": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RIProductDescription", Location: "", LocationName: "productDescription"}, "SpotPrice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "spotPrice"}, "ValidFrom": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "validFrom"}, "LaunchGroup": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "launchGroup"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "AvailabilityZoneGroup": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZoneGroup"}, "LaunchSpecification": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "LaunchSpecification", Location: "", LocationName: "launchSpecification"}, "CreateTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "createTime"}}, Pattern: "", Max: 0, Min: 0}, "VolumeStatusName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VpcPeeringConnectionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PlatformValues": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RegionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeConversionTaskList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeInstanceStatusResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceStatuses": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStatusList", Location: "", LocationName: "instanceStatusSet"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "InternetGatewayList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "PrivateIpAddressSpecification": main.Shape{Type: "structure", Required: []string{"PrivateIpAddress"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "Primary": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "primary"}}, Pattern: "", Max: 0, Min: 0}, "VpcAttachment": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttachmentStatus", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "AllocateAddressRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Domain": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DomainType", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateKeyPairRequest": main.Shape{Type: "structure", Required: []string{"KeyName"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DeleteDhcpOptionsRequest": main.Shape{Type: "structure", Required: []string{"DhcpOptionsId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "DhcpOptionsId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ProductCodeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeStatusAction": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "code"}, "Description": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "description"}, "EventType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "eventType"}, "EventId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "eventId"}}, Pattern: "", Max: 0, Min: 0}, "Tag": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Key": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "key"}, "Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "value"}}, Pattern: "", Max: 0, Min: 0}, "VolumeAttachment": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "Device": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "device"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeAttachmentState", Location: "", LocationName: "status"}, "AttachTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "attachTime"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}}, Pattern: "", Max: 0, Min: 0}, "DescribeBundleTasksRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "BundleIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BundleIdStringList", Location: "", LocationName: "BundleId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "PriceScheduleList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "IcmpTypeCode": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Type": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "type"}, "Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "code"}}, Pattern: "", Max: 0, Min: 0}, "EnableVolumeIORequest": main.Shape{Type: "structure", Required: []string{"VolumeId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VolumeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "volumeId"}}, Pattern: "", Max: 0, Min: 0}, "GatewayType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceMonitoring": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "Monitoring": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Monitoring", Location: "", LocationName: "monitoring"}}, Pattern: "", Max: 0, Min: 0}, "InstanceType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "NetworkInterfaceAssociation": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PublicIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "publicIp"}, "PublicDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "publicDnsName"}, "IpOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipOwnerId"}, "AllocationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "allocationId"}, "AssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "associationId"}}, Pattern: "", Max: 0, Min: 0}, "RebootInstancesRequest": main.Shape{Type: "structure", Required: []string{"InstanceIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}}, Pattern: "", Max: 0, Min: 0}, "CancelReservedInstancesListingResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ReservedInstancesListings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservedInstancesListingList", Location: "", LocationName: "reservedInstancesListingsSet"}}, Pattern: "", Max: 0, Min: 0}, "DescribeCustomerGatewaysRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "CustomerGatewayIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "CustomerGatewayIdStringList", Location: "", LocationName: "CustomerGatewayId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "DeleteCustomerGatewayRequest": main.Shape{Type: "structure", Required: []string{"CustomerGatewayId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CustomerGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "DescribeInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Reservations": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ReservationList", Location: "", LocationName: "reservationSet"}, "NextToken": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "nextToken"}}, Pattern: "", Max: 0, Min: 0}, "DescribeNetworkAclsRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkAclIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ValueStringList", Location: "", LocationName: "NetworkAclId"}, "Filters": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "FilterList", Location: "", LocationName: "Filter"}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfacePrivateIpAddress": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PrivateIpAddress": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateIpAddress"}, "PrivateDnsName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "privateDnsName"}, "Primary": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "primary"}, "Association": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkInterfaceAssociation", Location: "", LocationName: "association"}}, Pattern: "", Max: 0, Min: 0}, "ResetImageAttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CreateVpcPeeringConnectionRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"PeerOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "peerOwnerId"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "PeerVpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "peerVpcId"}}, Pattern: "", Max: 0, Min: 0}, "CustomerGatewayList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceBlockDeviceMappingSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Ebs": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "EbsInstanceBlockDeviceSpecification", Location: "", LocationName: "ebs"}, "VirtualName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "virtualName"}, "NoDevice": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "noDevice"}, "DeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "deviceName"}}, Pattern: "", Max: 0, Min: 0}, "IpPermissionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "Long": main.Shape{Type: "long", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "RouteTableList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "GetConsoleOutputRequest": main.Shape{Type: "structure", Required: []string{"InstanceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "GetPasswordDataResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "Timestamp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "timestamp"}, "PasswordData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "passwordData"}}, Pattern: "", Max: 0, Min: 0}, "BundleInstanceRequest": main.Shape{Type: "structure", Required: []string{"InstanceId", "Storage"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}, "Storage": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Storage", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateRouteRequest": main.Shape{Type: "structure", Required: []string{"RouteTableId", "DestinationCidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}, "DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "destinationCidrBlock"}, "GatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "gatewayId"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}}, Pattern: "", Max: 0, Min: 0}, "CreateVolumePermissionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "DomainType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "LaunchPermission": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"UserId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "userId"}, "Group": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "PermissionGroup", Location: "", LocationName: "group"}}, Pattern: "", Max: 0, Min: 0}, "SpotPlacement": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AvailabilityZone": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "availabilityZone"}, "GroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupName"}}, Pattern: "", Max: 0, Min: 0}, "AuthorizeSecurityGroupEgressRequest": main.Shape{Type: "structure", Required: []string{"GroupId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"IpProtocol": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ipProtocol"}, "FromPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "fromPort"}, "ToPort": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "toPort"}, "GroupId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "groupId"}, "SourceSecurityGroupName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sourceSecurityGroupName"}, "SourceSecurityGroupOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "sourceSecurityGroupOwnerId"}, "CidrIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrIp"}, "IpPermissions": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IpPermissionList", Location: "", LocationName: "ipPermissions"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZoneMessageList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "BlobAttributeValue": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Value": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Blob", Location: "", LocationName: "value"}}, Pattern: "", Max: 0, Min: 0}, "StatusName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "StopInstancesResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"StoppingInstances": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStateChangeList", Location: "", LocationName: "instancesSet"}}, Pattern: "", Max: 0, Min: 0}, "LaunchSpecification": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Placement": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "SpotPlacement", Location: "", LocationName: "placement"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "kernelId"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "BlockDeviceMappingList", Location: "", LocationName: "blockDeviceMapping"}, "IamInstanceProfile": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "IamInstanceProfileSpecification", Location: "", LocationName: "iamInstanceProfile"}, "ImageId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "imageId"}, "UserData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "userData"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceType", Location: "", LocationName: "instanceType"}, "SubnetId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "subnetId"}, "NetworkInterfaces": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceNetworkInterfaceSpecificationList", Location: "", LocationName: "networkInterfaceSet"}, "Monitoring": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RunInstancesMonitoringEnabled", Location: "", LocationName: "monitoring"}, "KeyName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "keyName"}, "SecurityGroups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "AddressingType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "addressingType"}, "RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "ramdiskId"}, "EbsOptimized": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "ebsOptimized"}}, Pattern: "", Max: 0, Min: 0}, "NetworkInterfaceAttachment": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"AttachmentId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "attachmentId"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "InstanceOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceOwnerId"}, "DeviceIndex": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "deviceIndex"}, "Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttachmentStatus", Location: "", LocationName: "status"}, "AttachTime": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "DateTime", Location: "", LocationName: "attachTime"}, "DeleteOnTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "deleteOnTermination"}}, Pattern: "", Max: 0, Min: 0}, "UserIdGroupPairList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "VolumeStatusInfo": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Status": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusInfoStatus", Location: "", LocationName: "status"}, "Details": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "VolumeStatusDetailsList", Location: "", LocationName: "details"}}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZoneList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstanceState": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Code": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Integer", Location: "", LocationName: "code"}, "Name": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceStateName", Location: "", LocationName: "name"}}, Pattern: "", Max: 0, Min: 0}, "DeleteVpnGatewayRequest": main.Shape{Type: "structure", Required: []string{"VpnGatewayId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpnGatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ProductCode": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ProductCodeType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeValues", Location: "", LocationName: "type"}, "ProductCodeId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "productCode"}}, Pattern: "", Max: 0, Min: 0}, "NetworkAcl": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "tagSet"}, "NetworkAclId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkAclId"}, "VpcId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcId"}, "IsDefault": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "default"}, "Entries": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkAclEntryList", Location: "", LocationName: "entrySet"}, "Associations": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "NetworkAclAssociationList", Location: "", LocationName: "associationSet"}}, Pattern: "", Max: 0, Min: 0}, "PrivateIpAddressStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "UnmonitorInstancesRequest": main.Shape{Type: "structure", Required: []string{"InstanceIds"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "InstanceIds": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceIdStringList", Location: "", LocationName: "InstanceId"}}, Pattern: "", Max: 0, Min: 0}, "InstanceAttribute": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"RamdiskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "ramdisk"}, "RootDeviceName": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "rootDeviceName"}, "BlockDeviceMappings": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "InstanceBlockDeviceMappingList", Location: "", LocationName: "blockDeviceMapping"}, "EbsOptimized": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "ebsOptimized"}, "SriovNetSupport": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "sriovNetSupport"}, "InstanceType": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "instanceType"}, "KernelId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "kernel"}, "Groups": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "GroupIdentifierList", Location: "", LocationName: "groupSet"}, "InstanceInitiatedShutdownBehavior": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "instanceInitiatedShutdownBehavior"}, "SourceDestCheck": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "sourceDestCheck"}, "ProductCodes": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ProductCodeList", Location: "", LocationName: "productCodes"}, "UserData": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeValue", Location: "", LocationName: "userData"}, "DisableApiTermination": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "AttributeBooleanValue", Location: "", LocationName: "disableApiTermination"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}}, Pattern: "", Max: 0, Min: 0}, "IpRange": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"CidrIp": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "cidrIp"}}, Pattern: "", Max: 0, Min: 0}, "AcceptVpcPeeringConnectionRequest": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}}, Pattern: "", Max: 0, Min: 0}, "VolumeDetail": main.Shape{Type: "structure", Required: []string{"Size"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Size": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Long", Location: "", LocationName: "size"}}, Pattern: "", Max: 0, Min: 0}, "InstanceCountList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "InstancePrivateIpAddressList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "ReplaceRouteRequest": main.Shape{Type: "structure", Required: []string{"RouteTableId", "DestinationCidrBlock"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}, "DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "RouteTableId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "routeTableId"}, "DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "destinationCidrBlock"}, "GatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "gatewayId"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}}, Pattern: "", Max: 0, Min: 0}, "ReplaceRouteTableAssociationResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"NewAssociationId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "newAssociationId"}}, Pattern: "", Max: 0, Min: 0}, "Route": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"Origin": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RouteOrigin", Location: "", LocationName: "origin"}, "DestinationCidrBlock": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "destinationCidrBlock"}, "GatewayId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "gatewayId"}, "InstanceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceId"}, "InstanceOwnerId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "instanceOwnerId"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}, "VpcPeeringConnectionId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "vpcPeeringConnectionId"}, "State": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "RouteState", Location: "", LocationName: "state"}}, Pattern: "", Max: 0, Min: 0}, "CreateTagsRequest": main.Shape{Type: "structure", Required: []string{"Resources", "Tags"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "Resources": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "ResourceIdList", Location: "", LocationName: "ResourceId"}, "Tags": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "TagList", Location: "", LocationName: "Tag"}}, Pattern: "", Max: 0, Min: 0}, "DeleteNetworkInterfaceRequest": main.Shape{Type: "structure", Required: []string{"NetworkInterfaceId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"DryRun": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "Boolean", Location: "", LocationName: "dryRun"}, "NetworkInterfaceId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "networkInterfaceId"}}, Pattern: "", Max: 0, Min: 0}, "UserGroupStringList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}, "CancelExportTaskRequest": main.Shape{Type: "structure", Required: []string{"ExportTaskId"}, Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}{
				"ExportTaskId": struct {
					Shape        string "json:\"shape\""
					Location     string "json:\"location\""
					LocationName string "json:\"locationName\""
				}{
					Shape: "String", Location: "", LocationName: "exportTaskId"}}, Pattern: "", Max: 0, Min: 0}, "PricingDetailsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
				Shape        string "json:\"shape\""
				Location     string "json:\"location\""
				LocationName string "json:\"locationName\""
			}(nil), Pattern: "", Max: 0, Min: 0}}}, "ElasticLoadBalancing": main.Service{Metadata: (*main.Metadata)(0xc208004300), Version: "", Operations: map[string]main.Operation{"DeleteLoadBalancerListeners": main.Operation{Name: "DeleteLoadBalancerListeners", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteLoadBalancerListenerInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeleteLoadBalancerListenersResult", Shape: "DeleteLoadBalancerListenerOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}}}, "DescribeLoadBalancers": main.Operation{Name: "DescribeLoadBalancers", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeAccessPointsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeLoadBalancersResult", Shape: "DescribeAccessPointsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}}}, "RegisterInstancesWithLoadBalancer": main.Operation{Name: "RegisterInstancesWithLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RegisterEndPointsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RegisterInstancesWithLoadBalancerResult", Shape: "RegisterEndPointsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidInstance", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidEndPointException"}}}, "DescribeLoadBalancerAttributes": main.Operation{Name: "DescribeLoadBalancerAttributes", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeLoadBalancerAttributesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeLoadBalancerAttributesResult", Shape: "DescribeLoadBalancerAttributesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerAttributeNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "LoadBalancerAttributeNotFoundException"}}}, "DescribeLoadBalancerPolicies": main.Operation{Name: "DescribeLoadBalancerPolicies", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeLoadBalancerPoliciesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeLoadBalancerPoliciesResult", Shape: "DescribeLoadBalancerPoliciesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "PolicyNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "PolicyNotFoundException"}}}, "DetachLoadBalancerFromSubnets": main.Operation{Name: "DetachLoadBalancerFromSubnets", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DetachLoadBalancerFromSubnetsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DetachLoadBalancerFromSubnetsResult", Shape: "DetachLoadBalancerFromSubnetsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "RemoveTags": main.Operation{Name: "RemoveTags", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RemoveTagsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RemoveTagsResult", Shape: "RemoveTagsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}}}, "SetLoadBalancerPoliciesOfListener": main.Operation{Name: "SetLoadBalancerPoliciesOfListener", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "SetLoadBalancerPoliciesOfListenerInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "SetLoadBalancerPoliciesOfListenerResult", Shape: "SetLoadBalancerPoliciesOfListenerOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "PolicyNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "PolicyNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ListenerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ListenerNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "DescribeTags": main.Operation{Name: "DescribeTags", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeTagsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeTagsResult", Shape: "DescribeTagsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}}}, "CreateAppCookieStickinessPolicy": main.Operation{Name: "CreateAppCookieStickinessPolicy", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateAppCookieStickinessPolicyInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateAppCookieStickinessPolicyResult", Shape: "CreateAppCookieStickinessPolicyOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicatePolicyName", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicatePolicyNameException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "TooManyPolicies", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "TooManyPoliciesException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "CreateLoadBalancerListeners": main.Operation{Name: "CreateLoadBalancerListeners", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateLoadBalancerListenerInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateLoadBalancerListenersResult", Shape: "CreateLoadBalancerListenerOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicateListener", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicateListenerException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "CertificateNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "CertificateNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "DeregisterInstancesFromLoadBalancer": main.Operation{Name: "DeregisterInstancesFromLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeregisterEndPointsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeregisterInstancesFromLoadBalancerResult", Shape: "DeregisterEndPointsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidInstance", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidEndPointException"}}}, "SetLoadBalancerPoliciesForBackendServer": main.Operation{Name: "SetLoadBalancerPoliciesForBackendServer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "SetLoadBalancerPoliciesForBackendServerInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "SetLoadBalancerPoliciesForBackendServerResult", Shape: "SetLoadBalancerPoliciesForBackendServerOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "PolicyNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "PolicyNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "AddTags": main.Operation{Name: "AddTags", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "AddTagsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "AddTagsResult", Shape: "AddTagsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "TooManyTags", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "TooManyTagsException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicateTagKeys", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicateTagKeysException"}}}, "EnableAvailabilityZonesForLoadBalancer": main.Operation{Name: "EnableAvailabilityZonesForLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "AddAvailabilityZonesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "EnableAvailabilityZonesForLoadBalancerResult", Shape: "AddAvailabilityZonesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}}}, "SetLoadBalancerListenerSSLCertificate": main.Operation{Name: "SetLoadBalancerListenerSSLCertificate", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "SetLoadBalancerListenerSSLCertificateInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "SetLoadBalancerListenerSSLCertificateResult", Shape: "SetLoadBalancerListenerSSLCertificateOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "CertificateNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "CertificateNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ListenerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ListenerNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "DeleteLoadBalancer": main.Operation{Name: "DeleteLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteAccessPointInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeleteLoadBalancerResult", Shape: "DeleteAccessPointOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeInstanceHealth": main.Operation{Name: "DescribeInstanceHealth", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeEndPointStateInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeInstanceHealthResult", Shape: "DescribeEndPointStateOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidInstance", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidEndPointException"}}}, "ModifyLoadBalancerAttributes": main.Operation{Name: "ModifyLoadBalancerAttributes", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ModifyLoadBalancerAttributesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ModifyLoadBalancerAttributesResult", Shape: "ModifyLoadBalancerAttributesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerAttributeNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "LoadBalancerAttributeNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "ApplySecurityGroupsToLoadBalancer": main.Operation{Name: "ApplySecurityGroupsToLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ApplySecurityGroupsToLoadBalancerInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ApplySecurityGroupsToLoadBalancerResult", Shape: "ApplySecurityGroupsToLoadBalancerOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSecurityGroup", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSecurityGroupException"}}}, "AttachLoadBalancerToSubnets": main.Operation{Name: "AttachLoadBalancerToSubnets", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "AttachLoadBalancerToSubnetsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "AttachLoadBalancerToSubnetsResult", Shape: "AttachLoadBalancerToSubnetsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubnetNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SubnetNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnetException"}}}, "CreateLBCookieStickinessPolicy": main.Operation{Name: "CreateLBCookieStickinessPolicy", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateLBCookieStickinessPolicyInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateLBCookieStickinessPolicyResult", Shape: "CreateLBCookieStickinessPolicyOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicatePolicyName", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicatePolicyNameException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "TooManyPolicies", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "TooManyPoliciesException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "CreateLoadBalancer": main.Operation{Name: "CreateLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateAccessPointInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateLoadBalancerResult", Shape: "CreateAccessPointOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicateLoadBalancerName", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicateAccessPointNameException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "TooManyLoadBalancers", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "TooManyAccessPointsException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "CertificateNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "CertificateNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubnetNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SubnetNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnetException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSecurityGroup", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSecurityGroupException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidScheme", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSchemeException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "TooManyTags", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "TooManyTagsException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicateTagKeys", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicateTagKeysException"}}}, "DeleteLoadBalancerPolicy": main.Operation{Name: "DeleteLoadBalancerPolicy", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteLoadBalancerPolicyInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeleteLoadBalancerPolicyResult", Shape: "DeleteLoadBalancerPolicyOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "DisableAvailabilityZonesForLoadBalancer": main.Operation{Name: "DisableAvailabilityZonesForLoadBalancer", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RemoveAvailabilityZonesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DisableAvailabilityZonesForLoadBalancerResult", Shape: "RemoveAvailabilityZonesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "ConfigureHealthCheck": main.Operation{Name: "ConfigureHealthCheck", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ConfigureHealthCheckInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ConfigureHealthCheckResult", Shape: "ConfigureHealthCheckOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}}}, "CreateLoadBalancerPolicy": main.Operation{Name: "CreateLoadBalancerPolicy", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateLoadBalancerPolicyInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateLoadBalancerPolicyResult", Shape: "CreateLoadBalancerPolicyOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LoadBalancerNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AccessPointNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "PolicyTypeNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "PolicyTypeNotFoundException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DuplicatePolicyName", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DuplicatePolicyNameException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "TooManyPolicies", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "TooManyPoliciesException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidConfigurationRequest", HttpStatusCode: 409, SenderFault: true}, Exception: true, Shape: "InvalidConfigurationRequestException"}}}, "DescribeLoadBalancerPolicyTypes": main.Operation{Name: "DescribeLoadBalancerPolicyTypes", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeLoadBalancerPolicyTypesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeLoadBalancerPolicyTypesResult", Shape: "DescribeLoadBalancerPolicyTypesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "PolicyTypeNotFound", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "PolicyTypeNotFoundException"}}}}, Shapes: map[string]main.Shape{"CreateAccessPointInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "Listeners"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Subnets", Location: "", LocationName: ""}, "SecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SecurityGroups", Location: "", LocationName: ""}, "Scheme": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerScheme", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Listeners": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Listeners", Location: "", LocationName: ""}, "AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZones", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "HealthCheckInterval": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 300, Min: 1}, "Instance": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"InstanceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "InstanceId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Instances": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DNSName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DefaultValue": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeLoadBalancerPoliciesInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "PolicyNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyNames", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeTagsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerNames"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerNamesMax20", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidEndPointException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "LoadBalancerAttributeNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "Ports": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SSLCertificateId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CreateAppCookieStickinessPolicyOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateLBCookieStickinessPolicyInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "PolicyName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"CookieExpirationPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CookieExpirationPeriod", Location: "", LocationName: ""}, "LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateLoadBalancerListenerOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "LoadBalancerNames": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Tag": main.Shape{Type: "structure", Required: []string{"Key"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Key": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagKey", Location: "", LocationName: ""}, "Value": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PolicyAttributes": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StringVal": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AccessPointPort": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeAccessPointsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"NextMarker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Marker", Location: "", LocationName: ""}, "LoadBalancerDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerDescriptions", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DuplicatePolicyNameException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "InvalidConfigurationRequestException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ModifyLoadBalancerAttributesInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "LoadBalancerAttributes"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "LoadBalancerAttributes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerAttributes", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReasonCode": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ListenerNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AppCookieStickinessPolicies": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ApplySecurityGroupsToLoadBalancerInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "SecurityGroups"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "SecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SecurityGroups", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZones": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteAccessPointInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteLoadBalancerPolicyInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "PolicyName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "LBCookieStickinessPolicy": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}, "CookieExpirationPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CookieExpirationPeriod", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Marker": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyAttributeTypeDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"AttributeName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AttributeName", Location: "", LocationName: ""}, "AttributeType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AttributeType", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "DefaultValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DefaultValue", Location: "", LocationName: ""}, "Cardinality": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Cardinality", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TooManyAccessPointsException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AddTagsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerNames", "Tags"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerNames", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ConnectionDraining": main.Shape{Type: "structure", Required: []string{"Enabled"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Enabled": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ConnectionDrainingEnabled", Location: "", LocationName: ""}, "Timeout": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ConnectionDrainingTimeout", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InstancePort": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 65535, Min: 1}, "ListenerDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyNames", Location: "", LocationName: ""}, "Listener": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Listener", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Protocol": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SourceSecurityGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OwnerAlias": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SecurityGroupOwnerAlias", Location: "", LocationName: ""}, "GroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SecurityGroupName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PolicyTypeDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SetLoadBalancerPoliciesOfListenerInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "LoadBalancerPort", "PolicyNames"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "LoadBalancerPort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointPort", Location: "", LocationName: ""}, "PolicyNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyNames", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AdditionalAttribute": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Value": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StringVal", Location: "", LocationName: ""}, "Key": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StringVal", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AttributeValue": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteLoadBalancerListenerInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "LoadBalancerPorts"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "LoadBalancerPorts": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Ports", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DuplicateTagKeysException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "LoadBalancerNamesMax20": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 20, Min: 1}, "PolicyNames": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ConnectionSettings": main.Shape{Type: "structure", Required: []string{"IdleTimeout"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"IdleTimeout": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IdleTimeout", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeLoadBalancerAttributesInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeLoadBalancerAttributesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerAttributes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerAttributes", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Policies": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LBCookieStickinessPolicies": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LBCookieStickinessPolicies", Location: "", LocationName: ""}, "OtherPolicies": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyNames", Location: "", LocationName: ""}, "AppCookieStickinessPolicies": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AppCookieStickinessPolicies", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SetLoadBalancerListenerSSLCertificateInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "LoadBalancerPort", "SSLCertificateId"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "LoadBalancerPort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointPort", Location: "", LocationName: ""}, "SSLCertificateId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SSLCertificateId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TooManyPoliciesException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "SecurityGroupName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "BackendServerDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"InstancePort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "InstancePort", Location: "", LocationName: ""}, "PolicyNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyNames", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DetachLoadBalancerFromSubnetsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "Subnets"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Subnets", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "HealthCheck": main.Shape{Type: "structure", Required: []string{"Target", "Interval", "Timeout", "UnhealthyThreshold", "HealthyThreshold"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"UnhealthyThreshold": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "UnhealthyThreshold", Location: "", LocationName: ""}, "HealthyThreshold": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthyThreshold", Location: "", LocationName: ""}, "Target": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthCheckTarget", Location: "", LocationName: ""}, "Interval": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthCheckInterval", Location: "", LocationName: ""}, "Timeout": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthCheckTimeout", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "HealthCheckTimeout": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 300, Min: 1}, "ModifyLoadBalancerAttributesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "LoadBalancerAttributes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerAttributes", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PageSize": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 400, Min: 1}, "AvailabilityZone": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyTypeDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyTypeName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyTypeName", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "PolicyAttributeTypeDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyAttributeTypeDescriptions", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RemoveTagsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerNames", "Tags"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerNames", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagKeyList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SetLoadBalancerPoliciesForBackendServerOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AccessPointNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "Cardinality": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CertificateNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CrossZoneLoadBalancing": main.Shape{Type: "structure", Required: []string{"Enabled"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Enabled": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CrossZoneLoadBalancingEnabled", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeLoadBalancerPolicyTypesInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyTypeNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyTypeNames", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EndPointPort": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AddAvailabilityZonesInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "AvailabilityZones"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZones", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ListenerDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SecurityGroups": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "State": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ConnectionDrainingTimeout": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CreateLoadBalancerPolicyOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeEndPointStateOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"InstanceStates": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "InstanceStates", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DetachLoadBalancerFromSubnetsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Subnets", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InstanceId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "InvalidSchemeException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "RemoveAvailabilityZonesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZones", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SetLoadBalancerPoliciesForBackendServerInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "InstancePort", "PolicyNames"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "InstancePort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EndPointPort", Location: "", LocationName: ""}, "PolicyNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyNames", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AccessLogEnabled": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AttributeType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DeleteLoadBalancerPolicyOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "LoadBalancerScheme": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyAttributeTypeDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyTypeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 1}, "CreateLoadBalancerListenerInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "Listeners"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Listeners": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Listeners", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteLoadBalancerListenerOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeLoadBalancerPoliciesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyDescriptions", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidSubnetException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "Listeners": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RemoveTagsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateAppCookieStickinessPolicyInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "PolicyName", "CookieName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}, "CookieName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CookieName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateLoadBalancerPolicyInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "PolicyName", "PolicyTypeName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}, "PolicyTypeName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyTypeName", Location: "", LocationName: ""}, "PolicyAttributes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyAttributes", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreatedTime": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RegisterEndPointsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "Instances"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Instances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Instances", Location: "", LocationName: ""}, "LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RegisterEndPointsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Instances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Instances", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RemoveAvailabilityZonesInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "AvailabilityZones"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZones", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TagKeyList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 1}, "TagKeyOnly": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Key": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagKey", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AttributeName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DeregisterEndPointsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "Instances"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Instances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Instances", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "LBCookieStickinessPolicies": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyAttribute": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"AttributeName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AttributeName", Location: "", LocationName: ""}, "AttributeValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AttributeValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PolicyAttributeDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"AttributeName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AttributeName", Location: "", LocationName: ""}, "AttributeValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AttributeValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PolicyDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AccessLog": main.Shape{Type: "structure", Required: []string{"Enabled"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"S3BucketName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "S3BucketName", Location: "", LocationName: ""}, "EmitInterval": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessLogInterval", Location: "", LocationName: ""}, "S3BucketPrefix": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessLogPrefix", Location: "", LocationName: ""}, "Enabled": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessLogEnabled", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AccessPointName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeAccessPointsInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerNames": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerNames", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Marker", Location: "", LocationName: ""}, "PageSize": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PageSize", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PolicyTypeNames": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SecurityGroupId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "UnhealthyThreshold": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 10, Min: 2}, "AttachLoadBalancerToSubnetsInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "Subnets"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Subnets", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "IdleTimeout": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 3600, Min: 1}, "InstanceStates": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "LoadBalancerDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"CanonicalHostedZoneName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DNSName", Location: "", LocationName: ""}, "VPCId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "VPCId", Location: "", LocationName: ""}, "SourceSecurityGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SourceSecurityGroup", Location: "", LocationName: ""}, "Scheme": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LoadBalancerScheme", Location: "", LocationName: ""}, "LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Policies": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Policies", Location: "", LocationName: ""}, "HealthCheck": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthCheck", Location: "", LocationName: ""}, "SecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SecurityGroups", Location: "", LocationName: ""}, "AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZones", Location: "", LocationName: ""}, "Instances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Instances", Location: "", LocationName: ""}, "CreatedTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CreatedTime", Location: "", LocationName: ""}, "Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Subnets", Location: "", LocationName: ""}, "DNSName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DNSName", Location: "", LocationName: ""}, "CanonicalHostedZoneNameID": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DNSName", Location: "", LocationName: ""}, "ListenerDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ListenerDescriptions", Location: "", LocationName: ""}, "BackendServerDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BackendServerDescriptions", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SecurityGroupOwnerAlias": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagKey": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$", Max: 128, Min: 1}, "DescribeLoadBalancerPolicyTypesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyTypeDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyTypeDescriptions", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "HealthCheckTarget": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyTypeNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AccessLogPrefix": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AttachLoadBalancerToSubnetsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Subnets", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidSecurityGroupException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "PolicyAttributeDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SubnetId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "VPCId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "BackendServerDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ConfigureHealthCheckInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName", "HealthCheck"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"HealthCheck": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthCheck", Location: "", LocationName: ""}, "LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "S3BucketName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SubnetNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "Subnets": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TooManyTagsException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "PolicyName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagValue": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$", Max: 256, Min: 0}, "ConfigureHealthCheckOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"HealthCheck": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "HealthCheck", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CrossZoneLoadBalancingEnabled": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeTagsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TagDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagDescriptions", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DuplicateAccessPointNameException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DuplicateListenerException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "HealthyThreshold": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 10, Min: 2}, "LoadBalancerAttributes": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"CrossZoneLoadBalancing": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CrossZoneLoadBalancing", Location: "", LocationName: ""}, "AccessLog": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessLog", Location: "", LocationName: ""}, "ConnectionDraining": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ConnectionDraining", Location: "", LocationName: ""}, "ConnectionSettings": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ConnectionSettings", Location: "", LocationName: ""}, "AdditionalAttributes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AdditionalAttributes", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PolicyDescription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyAttributeDescriptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyAttributeDescriptions", Location: "", LocationName: ""}, "PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}, "PolicyTypeName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyTypeName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AddTagsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateAccessPointOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DNSName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DNSName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeregisterEndPointsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Instances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Instances", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeEndPointStateInput": main.Shape{Type: "structure", Required: []string{"LoadBalancerName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LoadBalancerName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointName", Location: "", LocationName: ""}, "Instances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Instances", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InstanceState": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"InstanceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "InstanceId", Location: "", LocationName: ""}, "State": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "State", Location: "", LocationName: ""}, "ReasonCode": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ReasonCode", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Listener": main.Shape{Type: "structure", Required: []string{"Protocol", "LoadBalancerPort", "InstancePort"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"InstanceProtocol": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Protocol", Location: "", LocationName: ""}, "InstancePort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "InstancePort", Location: "", LocationName: ""}, "SSLCertificateId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SSLCertificateId", Location: "", LocationName: ""}, "Protocol": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Protocol", Location: "", LocationName: ""}, "LoadBalancerPort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AccessPointPort", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AppCookieStickinessPolicy": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PolicyName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PolicyName", Location: "", LocationName: ""}, "CookieName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CookieName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteAccessPointOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "LoadBalancerDescriptions": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PolicyNotFoundException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AccessLogInterval": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AdditionalAttributes": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CreateLBCookieStickinessPolicyOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AddAvailabilityZonesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZones", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CookieExpirationPeriod": main.Shape{Type: "long", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Description": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SetLoadBalancerPoliciesOfListenerOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ApplySecurityGroupsToLoadBalancerOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SecurityGroups", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ConnectionDrainingEnabled": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CookieName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SetLoadBalancerListenerSSLCertificateOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}}}, "RDS": main.Service{Metadata: (*main.Metadata)(0xc2080043c0), Version: "", Operations: map[string]main.Operation{"CopyOptionGroup": main.Operation{Name: "CopyOptionGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CopyOptionGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CopyOptionGroupResult", Shape: "CopyOptionGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupAlreadyExistsFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupQuotaExceededFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupQuotaExceededFault"}}}, "DescribeEventCategories": main.Operation{Name: "DescribeEventCategories", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeEventCategoriesMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeEventCategoriesResult", Shape: "EventCategoriesMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeEventSubscriptions": main.Operation{Name: "DescribeEventSubscriptions", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeEventSubscriptionsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeEventSubscriptionsResult", Shape: "EventSubscriptionsMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionNotFoundFault"}}}, "ModifyOptionGroup": main.Operation{Name: "ModifyOptionGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ModifyOptionGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ModifyOptionGroupResult", Shape: "ModifyOptionGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidOptionGroupStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidOptionGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}}}, "DescribeDBLogFiles": main.Operation{Name: "DescribeDBLogFiles", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBLogFilesMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBLogFilesResult", Shape: "DescribeDBLogFilesResponse"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}}}, "PurchaseReservedDBInstancesOffering": main.Operation{Name: "PurchaseReservedDBInstancesOffering", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "PurchaseReservedDBInstancesOfferingMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "PurchaseReservedDBInstancesOfferingResult", Shape: "PurchaseReservedDBInstancesOfferingResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ReservedDBInstancesOfferingNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "ReservedDBInstancesOfferingNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ReservedDBInstanceAlreadyExists", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "ReservedDBInstanceAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ReservedDBInstanceQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ReservedDBInstanceQuotaExceededFault"}}}, "DescribeReservedDBInstancesOfferings": main.Operation{Name: "DescribeReservedDBInstancesOfferings", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeReservedDBInstancesOfferingsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeReservedDBInstancesOfferingsResult", Shape: "ReservedDBInstancesOfferingMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ReservedDBInstancesOfferingNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "ReservedDBInstancesOfferingNotFoundFault"}}}, "ModifyEventSubscription": main.Operation{Name: "ModifyEventSubscription", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ModifyEventSubscriptionMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ModifyEventSubscriptionResult", Shape: "ModifyEventSubscriptionResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "EventSubscriptionQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "EventSubscriptionQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SNSInvalidTopic", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SNSInvalidTopicFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SNSNoAuthorization", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SNSNoAuthorizationFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SNSTopicArnNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SNSTopicArnNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionCategoryNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionCategoryNotFoundFault"}}}, "CopyDBSnapshot": main.Operation{Name: "CopyDBSnapshot", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CopyDBSnapshotMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CopyDBSnapshotResult", Shape: "CopyDBSnapshotResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSnapshotAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSnapshotState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSnapshotStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SnapshotQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SnapshotQuotaExceededFault"}}}, "CreateDBSecurityGroup": main.Operation{Name: "CreateDBSecurityGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateDBSecurityGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateDBSecurityGroupResult", Shape: "CreateDBSecurityGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "QuotaExceeded.DBSecurityGroup", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotSupported", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotSupportedFault"}}}, "AddSourceIdentifierToSubscription": main.Operation{Name: "AddSourceIdentifierToSubscription", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "AddSourceIdentifierToSubscriptionMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "AddSourceIdentifierToSubscriptionResult", Shape: "AddSourceIdentifierToSubscriptionResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SourceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SourceNotFoundFault"}}}, "CreateDBSubnetGroup": main.Operation{Name: "CreateDBSubnetGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateDBSubnetGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateDBSubnetGroupResult", Shape: "CreateDBSubnetGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetQuotaExceededFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupDoesNotCoverEnoughAZs", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupDoesNotCoverEnoughAZs"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnet"}}}, "ResetDBParameterGroup": main.Operation{Name: "ResetDBParameterGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ResetDBParameterGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ResetDBParameterGroupResult", Shape: "DBParameterGroupNameMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBParameterGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBParameterGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}}}, "AddTagsToResource": main.Operation{Name: "AddTagsToResource", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "AddTagsToResourceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}}}, "DeleteDBParameterGroup": main.Operation{Name: "DeleteDBParameterGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteDBParameterGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBParameterGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBParameterGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}}}, "DeleteDBSecurityGroup": main.Operation{Name: "DeleteDBSecurityGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteDBSecurityGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSecurityGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSecurityGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}}}, "DescribeDBSnapshots": main.Operation{Name: "DescribeDBSnapshots", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBSnapshotsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBSnapshotsResult", Shape: "DBSnapshotMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}}}, "CreateDBInstanceReadReplica": main.Operation{Name: "CreateDBInstanceReadReplica", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateDBInstanceReadReplicaMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateDBInstanceReadReplicaResult", Shape: "CreateDBInstanceReadReplicaResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBInstanceAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientDBInstanceCapacity", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientDBInstanceCapacityFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InstanceQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InstanceQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupDoesNotCoverEnoughAZs", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupDoesNotCoverEnoughAZs"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnet"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidVPCNetworkStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidVPCNetworkStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ProvisionedIopsNotAvailableInAZFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ProvisionedIopsNotAvailableInAZFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotAllowedFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotAllowedFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSubnetGroupFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSubnetGroupFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageTypeNotSupported", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageTypeNotSupportedFault"}}}, "DeleteOptionGroup": main.Operation{Name: "DeleteOptionGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteOptionGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidOptionGroupStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidOptionGroupStateFault"}}}, "ModifyDBParameterGroup": main.Operation{Name: "ModifyDBParameterGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ModifyDBParameterGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ModifyDBParameterGroupResult", Shape: "DBParameterGroupNameMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBParameterGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBParameterGroupStateFault"}}}, "ModifyDBSubnetGroup": main.Operation{Name: "ModifyDBSubnetGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ModifyDBSubnetGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ModifyDBSubnetGroupResult", Shape: "ModifyDBSubnetGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetQuotaExceededFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubnetAlreadyInUse", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SubnetAlreadyInUse"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupDoesNotCoverEnoughAZs", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupDoesNotCoverEnoughAZs"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnet"}}}, "DownloadDBLogFilePortion": main.Operation{Name: "DownloadDBLogFilePortion", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DownloadDBLogFilePortionMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DownloadDBLogFilePortionResult", Shape: "DownloadDBLogFilePortionDetails"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}}}, "ModifyDBInstance": main.Operation{Name: "ModifyDBInstance", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ModifyDBInstanceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ModifyDBInstanceResult", Shape: "ModifyDBInstanceResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSecurityGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSecurityGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBInstanceAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientDBInstanceCapacity", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientDBInstanceCapacityFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidVPCNetworkStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidVPCNetworkStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ProvisionedIopsNotAvailableInAZFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ProvisionedIopsNotAvailableInAZFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBUpgradeDependencyFailure", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBUpgradeDependencyFailureFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageTypeNotSupported", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageTypeNotSupportedFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "AuthorizationNotFoundFault"}}}, "RebootDBInstance": main.Operation{Name: "RebootDBInstance", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RebootDBInstanceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RebootDBInstanceResult", Shape: "RebootDBInstanceResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}}}, "RemoveTagsFromResource": main.Operation{Name: "RemoveTagsFromResource", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RemoveTagsFromResourceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}}}, "CreateOptionGroup": main.Operation{Name: "CreateOptionGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateOptionGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateOptionGroupResult", Shape: "CreateOptionGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupAlreadyExistsFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupQuotaExceededFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupQuotaExceededFault"}}}, "DeleteDBInstance": main.Operation{Name: "DeleteDBInstance", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteDBInstanceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeleteDBInstanceResult", Shape: "DeleteDBInstanceResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSnapshotAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SnapshotQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SnapshotQuotaExceededFault"}}}, "DeleteDBSnapshot": main.Operation{Name: "DeleteDBSnapshot", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteDBSnapshotMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeleteDBSnapshotResult", Shape: "DeleteDBSnapshotResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSnapshotState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSnapshotStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}}}, "DescribeDBEngineVersions": main.Operation{Name: "DescribeDBEngineVersions", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBEngineVersionsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBEngineVersionsResult", Shape: "DBEngineVersionMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "CreateDBSnapshot": main.Operation{Name: "CreateDBSnapshot", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateDBSnapshotMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateDBSnapshotResult", Shape: "CreateDBSnapshotResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSnapshotAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SnapshotQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SnapshotQuotaExceededFault"}}}, "RestoreDBInstanceFromDBSnapshot": main.Operation{Name: "RestoreDBInstanceFromDBSnapshot", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RestoreDBInstanceFromDBSnapshotMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RestoreDBInstanceFromDBSnapshotResult", Shape: "RestoreDBInstanceFromDBSnapshotResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBInstanceAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InstanceQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InstanceQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientDBInstanceCapacity", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientDBInstanceCapacityFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSnapshotState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSnapshotStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidVPCNetworkStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidVPCNetworkStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidRestoreFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidRestoreFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupDoesNotCoverEnoughAZs", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupDoesNotCoverEnoughAZs"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnet"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ProvisionedIopsNotAvailableInAZFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ProvisionedIopsNotAvailableInAZFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageTypeNotSupported", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageTypeNotSupportedFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "AuthorizationNotFoundFault"}}}, "DescribeOptionGroups": main.Operation{Name: "DescribeOptionGroups", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeOptionGroupsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeOptionGroupsResult", Shape: "OptionGroups"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}}}, "AuthorizeDBSecurityGroupIngress": main.Operation{Name: "AuthorizeDBSecurityGroupIngress", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "AuthorizeDBSecurityGroupIngressMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "AuthorizeDBSecurityGroupIngressResult", Shape: "AuthorizeDBSecurityGroupIngressResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSecurityGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSecurityGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AuthorizationAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AuthorizationQuotaExceededFault"}}}, "DescribeOptionGroupOptions": main.Operation{Name: "DescribeOptionGroupOptions", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeOptionGroupOptionsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeOptionGroupOptionsResult", Shape: "OptionGroupOptionsMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeDBSecurityGroups": main.Operation{Name: "DescribeDBSecurityGroups", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBSecurityGroupsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBSecurityGroupsResult", Shape: "DBSecurityGroupMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}}}, "DescribeEvents": main.Operation{Name: "DescribeEvents", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeEventsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeEventsResult", Shape: "EventsMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "ListTagsForResource": main.Operation{Name: "ListTagsForResource", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ListTagsForResourceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ListTagsForResourceResult", Shape: "TagListMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSnapshotNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSnapshotNotFoundFault"}}}, "PromoteReadReplica": main.Operation{Name: "PromoteReadReplica", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "PromoteReadReplicaMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "PromoteReadReplicaResult", Shape: "PromoteReadReplicaResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}}}, "CreateDBInstance": main.Operation{Name: "CreateDBInstance", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateDBInstanceMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateDBInstanceResult", Shape: "CreateDBInstanceResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBInstanceAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientDBInstanceCapacity", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientDBInstanceCapacityFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InstanceQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InstanceQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupDoesNotCoverEnoughAZs", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupDoesNotCoverEnoughAZs"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnet"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidVPCNetworkStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidVPCNetworkStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ProvisionedIopsNotAvailableInAZFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ProvisionedIopsNotAvailableInAZFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageTypeNotSupported", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageTypeNotSupportedFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "AuthorizationNotFoundFault"}}}, "CreateDBParameterGroup": main.Operation{Name: "CreateDBParameterGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateDBParameterGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateDBParameterGroupResult", Shape: "CreateDBParameterGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBParameterGroupQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBParameterGroupAlreadyExistsFault"}}}, "DeleteEventSubscription": main.Operation{Name: "DeleteEventSubscription", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteEventSubscriptionMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DeleteEventSubscriptionResult", Shape: "DeleteEventSubscriptionResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidEventSubscriptionState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidEventSubscriptionStateFault"}}}, "DescribeDBParameters": main.Operation{Name: "DescribeDBParameters", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBParametersMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBParametersResult", Shape: "DBParameterGroupDetails"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}}}, "RevokeDBSecurityGroupIngress": main.Operation{Name: "RevokeDBSecurityGroupIngress", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RevokeDBSecurityGroupIngressMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RevokeDBSecurityGroupIngressResult", Shape: "RevokeDBSecurityGroupIngressResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSecurityGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBSecurityGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "AuthorizationNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSecurityGroupState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSecurityGroupStateFault"}}}, "RestoreDBInstanceToPointInTime": main.Operation{Name: "RestoreDBInstanceToPointInTime", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RestoreDBInstanceToPointInTimeMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RestoreDBInstanceToPointInTimeResult", Shape: "RestoreDBInstanceToPointInTimeResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBInstanceAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InstanceQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InstanceQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientDBInstanceCapacity", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientDBInstanceCapacityFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBInstanceState", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBInstanceStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "PointInTimeRestoreNotEnabled", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "PointInTimeRestoreNotEnabledFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidVPCNetworkStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidVPCNetworkStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidRestoreFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidRestoreFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupDoesNotCoverEnoughAZs", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupDoesNotCoverEnoughAZs"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidSubnet", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidSubnet"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ProvisionedIopsNotAvailableInAZFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "ProvisionedIopsNotAvailableInAZFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "OptionGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "OptionGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "StorageTypeNotSupported", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "StorageTypeNotSupportedFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AuthorizationNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "AuthorizationNotFoundFault"}}}, "CreateEventSubscription": main.Operation{Name: "CreateEventSubscription", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateEventSubscriptionMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateEventSubscriptionResult", Shape: "CreateEventSubscriptionResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "EventSubscriptionQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "EventSubscriptionQuotaExceededFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionAlreadyExist", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SubscriptionAlreadyExistFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SNSInvalidTopic", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SNSInvalidTopicFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SNSNoAuthorization", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "SNSNoAuthorizationFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SNSTopicArnNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SNSTopicArnNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionCategoryNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionCategoryNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SourceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SourceNotFoundFault"}}}, "DescribeDBInstances": main.Operation{Name: "DescribeDBInstances", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBInstancesMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBInstancesResult", Shape: "DBInstanceMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBInstanceNotFoundFault"}}}, "DescribeDBSubnetGroups": main.Operation{Name: "DescribeDBSubnetGroups", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBSubnetGroupsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBSubnetGroupsResult", Shape: "DBSubnetGroupMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}}}, "DescribeOrderableDBInstanceOptions": main.Operation{Name: "DescribeOrderableDBInstanceOptions", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeOrderableDBInstanceOptionsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeOrderableDBInstanceOptionsResult", Shape: "OrderableDBInstanceOptionsMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "CopyDBParameterGroup": main.Operation{Name: "CopyDBParameterGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CopyDBParameterGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CopyDBParameterGroupResult", Shape: "CopyDBParameterGroupResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupAlreadyExists", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBParameterGroupAlreadyExistsFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupQuotaExceeded", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBParameterGroupQuotaExceededFault"}}}, "DeleteDBSubnetGroup": main.Operation{Name: "DeleteDBSubnetGroup", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteDBSubnetGroupMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSubnetGroupStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSubnetGroupStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InvalidDBSubnetStateFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InvalidDBSubnetStateFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBSubnetGroupNotFoundFault", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "DBSubnetGroupNotFoundFault"}}}, "RemoveSourceIdentifierFromSubscription": main.Operation{Name: "RemoveSourceIdentifierFromSubscription", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "RemoveSourceIdentifierFromSubscriptionMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "RemoveSourceIdentifierFromSubscriptionResult", Shape: "RemoveSourceIdentifierFromSubscriptionResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SubscriptionNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SubscriptionNotFoundFault"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "SourceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "SourceNotFoundFault"}}}, "DescribeDBParameterGroups": main.Operation{Name: "DescribeDBParameterGroups", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeDBParameterGroupsMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeDBParameterGroupsResult", Shape: "DBParameterGroupsMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "DBParameterGroupNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "DBParameterGroupNotFoundFault"}}}, "DescribeEngineDefaultParameters": main.Operation{Name: "DescribeEngineDefaultParameters", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeEngineDefaultParametersMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeEngineDefaultParametersResult", Shape: "DescribeEngineDefaultParametersResult"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeReservedDBInstances": main.Operation{Name: "DescribeReservedDBInstances", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeReservedDBInstancesMessage"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeReservedDBInstancesResult", Shape: "ReservedDBInstanceMessage"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "ReservedDBInstanceNotFound", HttpStatusCode: 404, SenderFault: true}, Exception: true, Shape: "ReservedDBInstanceNotFoundFault"}}}}, Shapes: map[string]main.Shape{"DBInstance": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "PreferredMaintenanceWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AutoMinorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "ReadReplicaDBInstanceIdentifiers": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ReadReplicaDBInstanceIdentifierList", Location: "", LocationName: ""}, "LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CharacterSetName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "BackupRetentionPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "DBSecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroupMembershipList", Location: "", LocationName: ""}, "PendingModifiedValues": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PendingModifiedValues", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "StatusInfos": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstanceStatusInfoList", Location: "", LocationName: ""}, "DBInstanceStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Endpoint": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Endpoint", Location: "", LocationName: ""}, "DBParameterGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBParameterGroupStatusList", Location: "", LocationName: ""}, "AvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSubnetGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSubnetGroup", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "OptionGroupMemberships": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroupMembershipList", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SecondaryAvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MasterUsername": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllocatedStorage": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "LatestRestorableTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "ReadReplicaSourceDBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "VpcSecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "VpcSecurityGroupMembershipList", Location: "", LocationName: ""}, "PubliclyAccessible": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "InstanceCreateTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "PreferredBackupWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteDBInstanceMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SkipFinalSnapshot": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "FinalDBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SourceNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeDBParametersMessage": main.Shape{Type: "structure", Required: []string{"DBParameterGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Source": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "InvalidSubnet": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "OptionGroupAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "SubscriptionCategoryNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateEventSubscriptionMessage": main.Shape{Type: "structure", Required: []string{"SubscriptionName", "SnsTopicArn"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SnsTopicArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EventCategories": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesList", Location: "", LocationName: ""}, "SourceIds": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SourceIdsList", Location: "", LocationName: ""}, "Enabled": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "SubscriptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSnapshotList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBSubnetGroupNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "OrderableDBInstanceOptionsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OrderableDBInstanceOptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OrderableDBInstanceOptionsList", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteDBInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AddSourceIdentifierToSubscriptionMessage": main.Shape{Type: "structure", Required: []string{"SubscriptionName", "SourceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SubscriptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeDBParameterGroupsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupOptionSettingsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ResetDBParameterGroupMessage": main.Shape{Type: "structure", Required: []string{"DBParameterGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ResetAllParameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParametersList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateOptionGroupMessage": main.Shape{Type: "structure", Required: []string{"OptionGroupName", "EngineName", "MajorEngineVersion", "OptionGroupDescription"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EngineName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MajorEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Double": main.Shape{Type: "double", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SNSTopicArnNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "SourceIdsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBEngineVersion": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBEngineDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBEngineVersionDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DefaultCharacterSet": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CharacterSet", Location: "", LocationName: ""}, "SupportedCharacterSets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SupportedCharacterSetsList", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBParameterGroupFamily": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "OrderableDBInstanceOption": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ReadReplicaCapable": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Vpc": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SupportsIops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AvailabilityZones": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZoneList", Location: "", LocationName: ""}, "MultiAZCapable": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstance": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ReservedDBInstanceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "RecurringCharges": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "RecurringChargeList", Location: "", LocationName: ""}, "OfferingType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "State": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Duration": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "FixedPrice": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Double", Location: "", LocationName: ""}, "ProductDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "StartTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "UsagePrice": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Double", Location: "", LocationName: ""}, "ReservedDBInstancesOfferingId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CurrencyCode": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceCount": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CharacterSet": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"CharacterSetDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CharacterSetName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateDBSnapshotMessage": main.Shape{Type: "structure", Required: []string{"DBSnapshotIdentifier", "DBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "DBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBInstanceMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstanceList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SubscriptionAlreadyExistFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBSnapshotNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateDBInstanceReadReplicaResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ModifyEventSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EventSubscription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventSubscription", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AuthorizeDBSecurityGroupIngressMessage": main.Shape{Type: "structure", Required: []string{"DBSecurityGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CIDRIP": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupOwnerId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBSnapshotAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroupNotAllowedFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstancesOfferingMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ReservedDBInstancesOfferings": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ReservedDBInstancesOfferingList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidDBParameterGroupStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "InvalidDBSubnetGroupStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "OptionGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EngineName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MajorEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Options": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionsList", Location: "", LocationName: ""}, "AllowsVpcAndNonVpcInstanceMemberships": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "VpcId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroupAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeDBEngineVersionsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DefaultOnly": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "ListSupportedCharacterSets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBParameterGroupFamily": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroups": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroupsList": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroupsList", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TStamp": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CopyDBParameterGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBParameterGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroupNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeDBLogFilesResponse": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DescribeDBLogFiles": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DescribeDBLogFilesList", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "IPRangeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DownloadDBLogFilePortionDetails": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LogFileData": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AdditionalDataPending": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Endpoint": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Address": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventSubscriptionsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EventSubscriptionsList": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventSubscriptionsList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ParametersList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Tag": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Key": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Value": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeOrderableDBInstanceOptionsMessage": main.Shape{Type: "structure", Required: []string{"Engine"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Vpc": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SNSNoAuthorizationFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "SourceType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AuthorizationQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CopyDBParameterGroupMessage": main.Shape{Type: "structure", Required: []string{"SourceDBParameterGroupIdentifier", "TargetDBParameterGroupIdentifier", "TargetDBParameterGroupDescription"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TargetDBParameterGroupIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TargetDBParameterGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "SourceDBParameterGroupIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroups", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SubnetGroupStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Subnets": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SubnetList", Location: "", LocationName: ""}, "DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSubnetGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "VpcId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupOptionsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroupOptions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroupOptionsList", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RebootDBInstanceMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ForceFailover": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "FilterList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeOptionGroupsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "EngineName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MajorEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidVPCNetworkStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DeleteDBSnapshotResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSnapshot": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSnapshot", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CopyOptionGroupMessage": main.Shape{Type: "structure", Required: []string{"SourceOptionGroupIdentifier", "TargetOptionGroupIdentifier", "TargetOptionGroupDescription"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SourceOptionGroupIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TargetOptionGroupIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TargetOptionGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Parameter": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ApplyType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DataType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "IsModifiable": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "ParameterName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ParameterValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllowedValues": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MinimumEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ApplyMethod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ApplyMethod", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Source": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CopyOptionGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroupStatus": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ParameterApplyStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteOptionGroupMessage": main.Shape{Type: "structure", Required: []string{"OptionGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeEventSubscriptionsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SubscriptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventCategoriesMap": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EventCategories": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidDBInstanceStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "RestoreDBInstanceFromDBSnapshotMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier", "DBSnapshotIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "PubliclyAccessible": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AutoMinorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "DBName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "AvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RestoreDBInstanceToPointInTimeResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PromoteReadReplicaMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "BackupRetentionPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "PreferredBackupWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StorageQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "SubnetAlreadyInUse": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "VpcSecurityGroupMembership": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"VpcSecurityGroupId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RebootDBInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionsDependedOn": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedDBInstanceQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateDBSubnetGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSubnetGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteEventSubscriptionMessage": main.Shape{Type: "structure", Required: []string{"SubscriptionName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SubscriptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ModifyEventSubscriptionMessage": main.Shape{Type: "structure", Required: []string{"SubscriptionName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Enabled": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "SubscriptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SnsTopicArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EventCategories": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SnapshotQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroupQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroupQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstancesOfferingNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroups": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBUpgradeDependencyFailureFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeDBLogFilesList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeDBLogFilesMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "FilenameContains": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "FileLastWritten": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Long", Location: "", LocationName: ""}, "FileSize": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Long", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBInstanceStatusInfoList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeDBSecurityGroupsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeDBSubnetGroupsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EC2SecurityGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupOwnerId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidDBSubnetGroupFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "TagList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBInstanceStatusInfo": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StatusType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Normal": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Message": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupMembership": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "String": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AuthorizeDBSecurityGroupIngressResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteEventSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EventSubscription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventSubscription", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroupsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBParameterGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBParameterGroupList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "PendingModifiedValues": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllocatedStorage": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MasterUserPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "BackupRetentionPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Boolean": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CreateDBSecurityGroupMessage": main.Shape{Type: "structure", Required: []string{"DBSecurityGroupName", "DBSecurityGroupDescription"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupMembership": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeDBSnapshotsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SnapshotType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidDBSnapshotStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "InvalidOptionGroupStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ModifyDBSubnetGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSubnetGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateDBInstanceReadReplicaMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier", "SourceDBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"PubliclyAccessible": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "AutoMinorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceDBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateDBParameterGroupMessage": main.Shape{Type: "structure", Required: []string{"DBParameterGroupName", "DBParameterGroupFamily", "Description"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBParameterGroupFamily": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeEventsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SourceType", Location: "", LocationName: ""}, "StartTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "Duration": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "EventCategories": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesList", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "SourceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EndTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TagListMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TagList": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PromoteReadReplicaResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventSubscriptionsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "OptionSetting": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"IsCollection": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Name": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ApplyType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DataType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllowedValues": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "IsModifiable": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Value": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DefaultValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteDBSecurityGroupMessage": main.Shape{Type: "structure", Required: []string{"DBSecurityGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventSubscriptionQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "EventsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Events": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InstanceQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "OptionNamesList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SubnetList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RecurringCharge": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"RecurringChargeAmount": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Double", Location: "", LocationName: ""}, "RecurringChargeFrequency": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Subnet": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SubnetIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SubnetAvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "AvailabilityZone", Location: "", LocationName: ""}, "SubnetStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "VpcSecurityGroupIdList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ModifyOptionGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBParameterGroupFamily": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RemoveTagsFromResourceMessage": main.Shape{Type: "structure", Required: []string{"ResourceName", "TagKeys"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ResourceName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TagKeys": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "KeyList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "VpcSecurityGroupMembershipList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "FilterValueList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "KeyList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RemoveSourceIdentifierFromSubscriptionMessage": main.Shape{Type: "structure", Required: []string{"SubscriptionName", "SourceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SubscriptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SubnetIdentifierList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBParameterGroupList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeDBInstancesMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventSubscription": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SnsTopicArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SubscriptionCreationTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Enabled": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "EventCategoriesList": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesList", Location: "", LocationName: ""}, "CustomerAwsId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CustSubscriptionId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceIdsList": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SourceIdsList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstanceMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ReservedDBInstances": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ReservedDBInstanceList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EngineDefaults": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParametersList", Location: "", LocationName: ""}, "DBParameterGroupFamily": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstanceNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstancesOfferingList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AddTagsToResourceMessage": main.Shape{Type: "structure", Required: []string{"ResourceName", "Tags"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ResourceName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZoneList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Filter": main.Shape{Type: "structure", Required: []string{"Name", "Values"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Name": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Values": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterValueList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Long": main.Shape{Type: "long", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "OptionsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBParameterGroupNameMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidRestoreFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ModifyOptionGroupMessage": main.Shape{Type: "structure", Required: []string{"OptionGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ApplyImmediately": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionsToInclude": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionConfigurationList", Location: "", LocationName: ""}, "OptionsToRemove": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionNamesList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupOptionSetting": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SettingDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DefaultValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ApplyType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllowedValues": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "IsModifiable": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "SettingName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SNSInvalidTopicFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateDBInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionConfigurationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "OptionGroupQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CopyDBSnapshotMessage": main.Shape{Type: "structure", Required: []string{"SourceDBSnapshotIdentifier", "TargetDBSnapshotIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SourceDBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TargetDBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBInstanceList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RevokeDBSecurityGroupIngressResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "AuthorizationNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBEngineVersionMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBEngineVersions": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBEngineVersionList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventCategoriesMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EventCategoriesMapList": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesMapList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PointInTimeRestoreNotEnabledFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "SupportedCharacterSetsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBEngineVersionList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RecurringChargeList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBParameterGroupStatusList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBSnapshot": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"AvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "VpcId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MasterUsername": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "SourceRegion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SnapshotType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "PercentProgress": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SnapshotCreateTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllocatedStorage": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "InstanceCreateTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupOption": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Persistent": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "EngineName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MajorEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MinimumRequiredMinorEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionsDependedOn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionsDependedOn", Location: "", LocationName: ""}, "Permanent": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "OptionGroupOptionSettings": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroupOptionSettingsList", Location: "", LocationName: ""}, "Name": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "PortRequired": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "DefaultPort": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstanceList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "OptionGroupMembershipList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CreateDBSecurityGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSecurityGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeEngineDefaultParametersResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EngineDefaults": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EngineDefaults", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroup": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"IPRanges": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IPRangeList", Location: "", LocationName: ""}, "OwnerId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "VpcId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EC2SecurityGroupList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupNameList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PurchaseReservedDBInstancesOfferingResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ReservedDBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ReservedDBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroups": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DownloadDBLogFilePortionMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier", "LogFileName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"NumberOfLines": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "LogFileName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InvalidDBSubnetStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "OptionConfiguration": main.Shape{Type: "structure", Required: []string{"OptionName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "DBSecurityGroupMemberships": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroupNameList", Location: "", LocationName: ""}, "VpcSecurityGroupMemberships": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "VpcSecurityGroupIdList", Location: "", LocationName: ""}, "OptionSettings": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionSettingsList", Location: "", LocationName: ""}, "OptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StorageTypeNotSupportedFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateDBSnapshotResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSnapshot": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSnapshot", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EC2SecurityGroupList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "InvalidEventSubscriptionStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ReadReplicaDBInstanceIdentifierList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ModifyDBInstanceMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AutoMinorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroupNameList", Location: "", LocationName: ""}, "MasterUserPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "PreferredBackupWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "NewDBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllocatedStorage": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "ApplyImmediately": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "BackupRetentionPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "PreferredMaintenanceWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "VpcSecurityGroupIds": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "VpcSecurityGroupIdList", Location: "", LocationName: ""}, "DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllowMajorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OrderableDBInstanceOptionsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeEngineDefaultParametersMessage": main.Shape{Type: "structure", Required: []string{"DBParameterGroupFamily"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupFamily": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBInstanceNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DeleteDBSnapshotMessage": main.Shape{Type: "structure", Required: []string{"DBSnapshotIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSnapshotIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionGroupOptionsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AuthorizationAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AvailabilityZone": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Name": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateDBSubnetGroupMessage": main.Shape{Type: "structure", Required: []string{"DBSubnetGroupName", "DBSubnetGroupDescription", "SubnetIds"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSubnetGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SubnetIds": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SubnetIdentifierList", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBInstanceAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroupDoesNotCoverEnoughAZs": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeOptionGroupOptionsMessage": main.Shape{Type: "structure", Required: []string{"EngineName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EngineName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MajorEngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "PurchaseReservedDBInstancesOfferingMessage": main.Shape{Type: "structure", Required: []string{"ReservedDBInstancesOfferingId"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ReservedDBInstancesOfferingId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ReservedDBInstanceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceCount": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ModifyDBInstanceResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateDBInstanceMessage": main.Shape{Type: "structure", Required: []string{"DBInstanceIdentifier", "AllocatedStorage", "DBInstanceClass", "Engine", "MasterUsername", "MasterUserPassword"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MasterUsername": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MasterUserPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "BackupRetentionPeriod": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "TdeCredentialPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "VpcSecurityGroupIds": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "VpcSecurityGroupIdList", Location: "", LocationName: ""}, "DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AutoMinorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "DBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "PreferredBackupWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroupNameList", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "EngineVersion": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "PubliclyAccessible": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "PreferredMaintenanceWindow": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CharacterSetName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AllocatedStorage": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupNotSupportedFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeDBLogFilesDetails": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Size": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Long", Location: "", LocationName: ""}, "LogFileName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "LastWritten": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Long", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBParameterGroupDetails": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParametersList", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroupMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroups": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSubnetGroups", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteDBParameterGroupMessage": main.Shape{Type: "structure", Required: []string{"DBParameterGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Integer": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ModifyDBSubnetGroupMessage": main.Shape{Type: "structure", Required: []string{"DBSubnetGroupName", "SubnetIds"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSubnetGroupDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SubnetIds": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SubnetIdentifierList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionSettingConfigurationList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ReservedDBInstanceAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "AddSourceIdentifierToSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EventSubscription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventSubscription", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Event": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Message": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EventCategories": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventCategoriesList", Location: "", LocationName: ""}, "Date": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "SourceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "SourceType", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventCategoriesMapList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "RevokeDBSecurityGroupIngressMessage": main.Shape{Type: "structure", Required: []string{"DBSecurityGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EC2SecurityGroupId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupOwnerId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CIDRIP": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "EC2SecurityGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RestoreDBInstanceFromDBSnapshotResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBInstance": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBInstance", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSnapshotMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBSnapshots": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSnapshotList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSubnetGroupAlreadyExistsFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DeleteDBSubnetGroupMessage": main.Shape{Type: "structure", Required: []string{"DBSubnetGroupName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedDBInstancesMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ReservedDBInstanceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OfferingType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "ReservedDBInstancesOfferingId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Duration": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ProductDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "IntegerOptional": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SubscriptionNotFoundFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreateEventSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EventSubscription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventSubscription", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ApplyMethod": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "IPRange": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"CIDRIP": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "InsufficientDBInstanceCapacityFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "RestoreDBInstanceToPointInTimeMessage": main.Shape{Type: "structure", Required: []string{"SourceDBInstanceIdentifier", "TargetDBInstanceIdentifier"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TdeCredentialPassword": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "SourceDBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "PubliclyAccessible": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "AutoMinorVersionUpgrade": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "Iops": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "RestoreTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TStamp", Location: "", LocationName: ""}, "DBSubnetGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OptionGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagList", Location: "", LocationName: ""}, "TargetDBInstanceIdentifier": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "DBName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "TdeCredentialArn": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "StorageType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "UseLatestRestorableTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "AvailabilityZone": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "LicenseModel": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Engine": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CopyDBSnapshotResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBSnapshot": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSnapshot", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateOptionGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "RemoveSourceIdentifierFromSubscriptionResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"EventSubscription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventSubscription", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DBSecurityGroupMembershipList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeEventCategoriesMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"SourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ListTagsForResourceMessage": main.Shape{Type: "structure", Required: []string{"ResourceName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ResourceName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OptionSettingsList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ProvisionedIopsNotAvailableInAZFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ReservedDBInstancesOffering": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OfferingType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "RecurringCharges": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "RecurringChargeList", Location: "", LocationName: ""}, "ReservedDBInstancesOfferingId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "CurrencyCode": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "FixedPrice": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Double", Location: "", LocationName: ""}, "UsagePrice": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Double", Location: "", LocationName: ""}, "ProductDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Duration": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Integer", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateDBParameterGroupResult": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroup": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBParameterGroup", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventCategoriesList": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "InvalidDBSecurityGroupStateFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ModifyDBParameterGroupMessage": main.Shape{Type: "structure", Required: []string{"DBParameterGroupName", "Parameters"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"DBParameterGroupName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParametersList", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Option": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OptionDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Persistent": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Permanent": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Boolean", Location: "", LocationName: ""}, "Port": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "OptionSettings": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OptionSettingConfigurationList", Location: "", LocationName: ""}, "DBSecurityGroupMemberships": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DBSecurityGroupMembershipList", Location: "", LocationName: ""}, "VpcSecurityGroupMemberships": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "VpcSecurityGroupMembershipList", Location: "", LocationName: ""}, "OptionName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "BooleanOptional": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DBSubnetQuotaExceededFault": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "DescribeReservedDBInstancesOfferingsMessage": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"MultiAZ": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "BooleanOptional", Location: "", LocationName: ""}, "MaxRecords": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "IntegerOptional", Location: "", LocationName: ""}, "Marker": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Duration": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "ProductDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "OfferingType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "Filters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "FilterList", Location: "", LocationName: ""}, "ReservedDBInstancesOfferingId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}, "DBInstanceClass": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "String", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}}}, "CloudFormation": main.Service{Metadata: (*main.Metadata)(0xc208004480), Version: "", Operations: map[string]main.Operation{"CancelUpdateStack": main.Operation{Name: "CancelUpdateStack", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CancelUpdateStackInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeStackResources": main.Operation{Name: "DescribeStackResources", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeStackResourcesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeStackResourcesResult", Shape: "DescribeStackResourcesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeStacks": main.Operation{Name: "DescribeStacks", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeStacksInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeStacksResult", Shape: "DescribeStacksOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "SetStackPolicy": main.Operation{Name: "SetStackPolicy", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "SetStackPolicyInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "CreateStack": main.Operation{Name: "CreateStack", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "CreateStackInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "CreateStackResult", Shape: "CreateStackOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "LimitExceededException", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "LimitExceededException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "AlreadyExistsException", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "AlreadyExistsException"}, struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientCapabilitiesException", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientCapabilitiesException"}}}, "DescribeStackEvents": main.Operation{Name: "DescribeStackEvents", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeStackEventsInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeStackEventsResult", Shape: "DescribeStackEventsOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DescribeStackResource": main.Operation{Name: "DescribeStackResource", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DescribeStackResourceInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "DescribeStackResourceResult", Shape: "DescribeStackResourceOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "ListStacks": main.Operation{Name: "ListStacks", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ListStacksInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ListStacksResult", Shape: "ListStacksOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "SignalResource": main.Operation{Name: "SignalResource", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "SignalResourceInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "ValidateTemplate": main.Operation{Name: "ValidateTemplate", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ValidateTemplateInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ValidateTemplateResult", Shape: "ValidateTemplateOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "DeleteStack": main.Operation{Name: "DeleteStack", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "DeleteStackInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "", Shape: ""}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "GetStackPolicy": main.Operation{Name: "GetStackPolicy", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "GetStackPolicyInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "GetStackPolicyResult", Shape: "GetStackPolicyOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "ListStackResources": main.Operation{Name: "ListStackResources", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "ListStackResourcesInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "ListStackResourcesResult", Shape: "ListStackResourcesOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "UpdateStack": main.Operation{Name: "UpdateStack", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "UpdateStackInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "UpdateStackResult", Shape: "UpdateStackOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}{
		struct {
			Error struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			} "json:\"error\""
			Exception bool   "json:\"exception\""
			Shape     string "json:\"shape\""
		}{
			Error: struct {
				Code           string  "json:\"code\""
				HttpStatusCode float64 "json:\"httpStatusCode\""
				SenderFault    bool    "json:\"senderFault\""
			}{
				Code: "InsufficientCapabilitiesException", HttpStatusCode: 400, SenderFault: true}, Exception: true, Shape: "InsufficientCapabilitiesException"}}}, "EstimateTemplateCost": main.Operation{Name: "EstimateTemplateCost", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "EstimateTemplateCostInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "EstimateTemplateCostResult", Shape: "EstimateTemplateCostOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "GetTemplate": main.Operation{Name: "GetTemplate", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "GetTemplateInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "GetTemplateResult", Shape: "GetTemplateOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}, "GetTemplateSummary": main.Operation{Name: "GetTemplateSummary", Http: struct {
		Method     string "json:\"method\""
		RequestUri string "json:\"requestUri\""
	}{
		Method: "POST", RequestUri: "/"}, Input: struct {
		Shape string "json:\"shape\""
	}{
		Shape: "GetTemplateSummaryInput"}, Output: struct {
		ResultWrapper string "json:\"resultWrapper\""
		Shape         string "json:\"shape\""
	}{
		ResultWrapper: "GetTemplateSummaryResult", Shape: "GetTemplateSummaryOutput"}, Errors: []struct {
		Error struct {
			Code           string  "json:\"code\""
			HttpStatusCode float64 "json:\"httpStatusCode\""
			SenderFault    bool    "json:\"senderFault\""
		} "json:\"error\""
		Exception bool   "json:\"exception\""
		Shape     string "json:\"shape\""
	}(nil)}}, Shapes: map[string]main.Shape{"UpdateStackOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ValidateTemplateOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateParameters", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "Capabilities": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Capabilities", Location: "", LocationName: ""}, "CapabilitiesReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CapabilitiesReason", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DeleteStackInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EstimateTemplateCostInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TemplateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateBody", Location: "", LocationName: ""}, "TemplateURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateURL", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Parameters", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ParameterType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ResourceSignalStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "SignalResourceInput": main.Shape{Type: "structure", Required: []string{"StackName", "LogicalResourceId", "UniqueId", "Status"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Status": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceSignalStatus", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackNameOrId", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}, "UniqueId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceSignalUniqueId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StackPolicyURL": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 1350, Min: 1}, "Output": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"OutputValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OutputValue", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "OutputKey": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OutputKey", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "SetStackPolicyInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "StackPolicyBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyBody", Location: "", LocationName: ""}, "StackPolicyURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyURL", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EventId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "GetTemplateInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "GetTemplateOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TemplateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateBody", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ListStackResourcesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackResourceSummaries": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackResourceSummaries", Location: "", LocationName: ""}, "NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ListStacksInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}, "StackStatusFilter": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackStatusFilter", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "NoEcho": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagValue": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Timestamp": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackPolicyDuringUpdateURL": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 1350, Min: 1}, "UsePreviousTemplate": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "AlreadyExistsException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "Capability": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeStackEventsInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeStackEventsOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackEvents": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackEvents", Location: "", LocationName: ""}, "NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "GetStackPolicyInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Outputs": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackSummary": main.Shape{Type: "structure", Required: []string{"StackName", "CreationTime", "StackStatus"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "TemplateDescription": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateDescription", Location: "", LocationName: ""}, "CreationTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CreationTime", Location: "", LocationName: ""}, "LastUpdatedTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LastUpdatedTime", Location: "", LocationName: ""}, "DeletionTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DeletionTime", Location: "", LocationName: ""}, "StackStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackStatus", Location: "", LocationName: ""}, "StackStatusReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackStatusReason", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TemplateURL": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 1024, Min: 1}, "GetTemplateSummaryInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TemplateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateBody", Location: "", LocationName: ""}, "TemplateURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateURL", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackNameOrId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "NotificationARN": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "OutputValue": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ResourceSignalUniqueId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 64, Min: 1}, "ResourceType": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackEvents": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Metadata": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Parameter": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ParameterKey": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterKey", Location: "", LocationName: ""}, "ParameterValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterValue", Location: "", LocationName: ""}, "UsePreviousValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "UsePreviousValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ParameterDeclarations": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackResource": main.Shape{Type: "structure", Required: []string{"LogicalResourceId", "ResourceType", "Timestamp", "ResourceStatus"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ResourceStatusReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatusReason", Location: "", LocationName: ""}, "ResourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceType", Location: "", LocationName: ""}, "Timestamp": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Timestamp", Location: "", LocationName: ""}, "ResourceStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatus", Location: "", LocationName: ""}, "PhysicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PhysicalResourceId", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "TimeoutMinutes": main.Shape{Type: "integer", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 1}, "Capabilities": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeStackResourceInput": main.Shape{Type: "structure", Required: []string{"StackName", "LogicalResourceId"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StackPolicyDuringUpdateBody": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 16384, Min: 1}, "StackResources": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TemplateDescription": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackStatusFilter": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackStatusReason": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CreateStackOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "NotificationARNs": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 5, Min: 0}, "OutputKey": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ParameterKey": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackEvent": main.Shape{Type: "structure", Required: []string{"StackId", "EventId", "StackName", "Timestamp"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ResourceStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatus", Location: "", LocationName: ""}, "ResourceStatusReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatusReason", Location: "", LocationName: ""}, "ResourceProperties": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceProperties", Location: "", LocationName: ""}, "Timestamp": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Timestamp", Location: "", LocationName: ""}, "StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}, "EventId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "EventId", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}, "PhysicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PhysicalResourceId", Location: "", LocationName: ""}, "ResourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceType", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StackName": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackSummaries": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TemplateBody": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 1}, "UpdateStackInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Capabilities": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Capabilities", Location: "", LocationName: ""}, "NotificationARNs": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NotificationARNs", Location: "", LocationName: ""}, "TemplateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateBody", Location: "", LocationName: ""}, "TemplateURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateURL", Location: "", LocationName: ""}, "UsePreviousTemplate": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "UsePreviousTemplate", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Parameters", Location: "", LocationName: ""}, "StackPolicyURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyURL", Location: "", LocationName: ""}, "StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "StackPolicyDuringUpdateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyDuringUpdateBody", Location: "", LocationName: ""}, "StackPolicyDuringUpdateURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyDuringUpdateURL", Location: "", LocationName: ""}, "StackPolicyBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyBody", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ValidateTemplateInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"TemplateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateBody", Location: "", LocationName: ""}, "TemplateURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateURL", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CreateStackInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "TemplateURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateURL", Location: "", LocationName: ""}, "DisableRollback": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DisableRollback", Location: "", LocationName: ""}, "TimeoutInMinutes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TimeoutMinutes", Location: "", LocationName: ""}, "NotificationARNs": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NotificationARNs", Location: "", LocationName: ""}, "Capabilities": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Capabilities", Location: "", LocationName: ""}, "OnFailure": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "OnFailure", Location: "", LocationName: ""}, "StackPolicyBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyBody", Location: "", LocationName: ""}, "TemplateBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TemplateBody", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Parameters", Location: "", LocationName: ""}, "StackPolicyURL": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyURL", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Tags", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeStackResourcesInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}, "PhysicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PhysicalResourceId", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ListStackResourcesInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ResourceProperties": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TemplateParameter": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "ParameterKey": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterKey", Location: "", LocationName: ""}, "DefaultValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterValue", Location: "", LocationName: ""}, "NoEcho": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NoEcho", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "GetStackPolicyOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackPolicyBody": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackPolicyBody", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ParameterDeclaration": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"ParameterType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterType", Location: "", LocationName: ""}, "NoEcho": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NoEcho", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "ParameterKey": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterKey", Location: "", LocationName: ""}, "DefaultValue": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterValue", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "ParameterValue": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackPolicyBody": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 16384, Min: 1}, "StackResourceSummary": main.Shape{Type: "structure", Required: []string{"LogicalResourceId", "ResourceType", "LastUpdatedTimestamp", "ResourceStatus"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"LastUpdatedTimestamp": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Timestamp", Location: "", LocationName: ""}, "ResourceStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatus", Location: "", LocationName: ""}, "ResourceStatusReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatusReason", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}, "PhysicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PhysicalResourceId", Location: "", LocationName: ""}, "ResourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceType", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "CancelUpdateStackInput": main.Shape{Type: "structure", Required: []string{"StackName"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "Description": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "GetTemplateSummaryOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Version": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Version", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ParameterDeclarations", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "Capabilities": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Capabilities", Location: "", LocationName: ""}, "CapabilitiesReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CapabilitiesReason", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "LimitExceededException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "CreationTime": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "LastUpdatedTime": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Parameters": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TemplateParameters": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Url": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Version": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackNameOrId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "([a-zA-Z][-a-zA-Z0-9]*)|(arn:\\b(aws|aws-us-gov|aws-cn)\\b:[-a-zA-Z0-9:/._+]*)", Max: 0, Min: 1}, "Tags": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "CapabilitiesReason": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DisableRollback": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "InsufficientCapabilitiesException": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{}, Pattern: "", Max: 0, Min: 0}, "ListStacksOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackSummaries": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackSummaries", Location: "", LocationName: ""}, "NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "LogicalResourceId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "PhysicalResourceId": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackResourceDetail": main.Shape{Type: "structure", Required: []string{"LogicalResourceId", "ResourceType", "LastUpdatedTimestamp", "ResourceStatus"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}, "LogicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LogicalResourceId", Location: "", LocationName: ""}, "PhysicalResourceId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "PhysicalResourceId", Location: "", LocationName: ""}, "ResourceType": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceType", Location: "", LocationName: ""}, "LastUpdatedTimestamp": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Timestamp", Location: "", LocationName: ""}, "ResourceStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatus", Location: "", LocationName: ""}, "Metadata": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Metadata", Location: "", LocationName: ""}, "ResourceStatusReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "ResourceStatusReason", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "StackResourceSummaries": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DeletionTime": main.Shape{Type: "timestamp", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "DescribeStackResourceOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackResourceDetail": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackResourceDetail", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeStackResourcesOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackResources": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackResources", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "EstimateTemplateCostOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Url": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Url", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "OnFailure": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Stack": main.Shape{Type: "structure", Required: []string{"StackName", "CreationTime", "StackStatus"}, Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "StackStatusReason": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackStatusReason", Location: "", LocationName: ""}, "StackId": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackId", Location: "", LocationName: ""}, "Description": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Description", Location: "", LocationName: ""}, "LastUpdatedTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "LastUpdatedTime", Location: "", LocationName: ""}, "Outputs": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Outputs", Location: "", LocationName: ""}, "Parameters": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Parameters", Location: "", LocationName: ""}, "CreationTime": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "CreationTime", Location: "", LocationName: ""}, "StackStatus": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackStatus", Location: "", LocationName: ""}, "Capabilities": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Capabilities", Location: "", LocationName: ""}, "Tags": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Tags", Location: "", LocationName: ""}, "DisableRollback": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "DisableRollback", Location: "", LocationName: ""}, "NotificationARNs": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NotificationARNs", Location: "", LocationName: ""}, "TimeoutInMinutes": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TimeoutMinutes", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "UsePreviousValue": main.Shape{Type: "boolean", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Stacks": main.Shape{Type: "list", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "Tag": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Value": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagValue", Location: "", LocationName: ""}, "Key": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "TagKey", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeStacksInput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"StackName": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "StackName", Location: "", LocationName: ""}, "NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "DescribeStacksOutput": main.Shape{Type: "structure", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}{
		"Stacks": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "Stacks", Location: "", LocationName: ""}, "NextToken": struct {
			Shape        string "json:\"shape\""
			Location     string "json:\"location\""
			LocationName string "json:\"locationName\""
		}{
			Shape: "NextToken", Location: "", LocationName: ""}}, Pattern: "", Max: 0, Min: 0}, "NextToken": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 1024, Min: 1}, "ResourceStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "ResourceStatusReason": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "StackStatus": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}, "TagKey": main.Shape{Type: "string", Required: []string(nil), Members: map[string]struct {
		Shape        string "json:\"shape\""
		Location     string "json:\"location\""
		LocationName string "json:\"locationName\""
	}(nil), Pattern: "", Max: 0, Min: 0}}}}
